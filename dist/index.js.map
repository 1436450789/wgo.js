{"version":3,"file":"index.js","sources":["../src/SGFParser/SGFSyntaxError.ts","../src/SGFParser/SGFParser.ts","../src/CanvasBoard/CanvasLayer.ts","../src/CanvasBoard/ShadowLayer.ts","../src/CanvasBoard/drawHandlers/stoneShadow.ts","../src/CanvasBoard/drawHandlers/shellStoneBlack.ts","../src/CanvasBoard/drawHandlers/shellStoneWhite.ts","../src/CanvasBoard/drawHandlers/glassStoneBlack.ts","../src/CanvasBoard/drawHandlers/glassStoneWhite.ts","../src/CanvasBoard/drawHandlers/paintedStoneBlack.ts","../src/CanvasBoard/drawHandlers/paintedStoneWhite.ts","../src/CanvasBoard/drawHandlers/simpleStone.ts","../src/CanvasBoard/drawHandlers/realisticStone.ts","../src/CanvasBoard/drawHandlers/circle.ts","../src/CanvasBoard/drawHandlers/square.ts","../src/CanvasBoard/drawHandlers/triangle.ts","../src/CanvasBoard/drawHandlers/label.ts","../src/CanvasBoard/drawHandlers/dot.ts","../src/CanvasBoard/drawHandlers/xMark.ts","../src/CanvasBoard/drawHandlers/smileyFace.ts","../src/CanvasBoard/drawHandlers/transparent.ts","../src/CanvasBoard/drawHandlers/reduced.ts","../src/CanvasBoard/drawHandlers/gridFieldClear.ts","../src/CanvasBoard/boardObjects/BoardObject.ts","../src/CanvasBoard/boardObjects/Circle.ts","../src/CanvasBoard/boardObjects/ThemedObject.ts","../src/CanvasBoard/boardObjects/simpleStoneFactory.ts","../src/CanvasBoard/themes/baseTheme.ts","../src/CanvasBoard/themes/realisticTheme.ts","../src/CanvasBoard/themes/modernTheme.ts","../src/CanvasBoard/themes/index.ts","../src/CanvasBoard/defaultConfig.ts","../src/utils/makeConfig.ts","../src/utils/EventEmitter.ts","../src/CanvasBoard/GridLayer.ts","../src/CanvasBoard/CanvasBoard.ts","../src/Game/rules.ts","../src/types.ts","../src/Game/Position.ts","../src/Game/Game.ts","../src/Player/defaultConfig.ts","../src/kifu/propertyValueTypes.ts","../src/kifu/KifuNode.ts","../src/SGFParser/sgfTypes.ts","../src/kifu/KifuReader.ts","../src/Player/propertyHandlers.ts","../src/Player/Player.ts","../src/index.ts"],"sourcesContent":["import SGFParser from './SGFParser';\r\n\r\n/**\r\n * Class for syntax errors in SGF string.\r\n * @ extends Error\r\n */\r\nexport class SGFSyntaxError extends Error {\r\n  // tslint:disable-next-line:variable-name\r\n  __proto__: Error;\r\n\r\n  constructor(message: string, parser?: SGFParser) {\r\n    super(message);\r\n    this.__proto__ = new.target.prototype;\r\n\r\n    // var tempError = Error.apply(this);\r\n    this.name = this.name = 'SGFSyntaxError';\r\n    this.message = message || 'There was an unspecified syntax error in the SGF';\r\n\r\n    if (parser) {\r\n      this.message += ` on line ${parser.lineNo}, char ${parser.charNo}:\\n`;\r\n      this.message += `\\t${parser.sgfString.split('\\n')[parser.lineNo - 1]}\\n`;\r\n      this.message += `\\t${Array(parser.charNo + 1).join(' ')}^`;\r\n    }\r\n  }\r\n}\r\n\r\n// a small ES5 hack because currently in ES6 you can't extend Errors\r\n// SGFSyntaxError.prototype = Object.create(Error.prototype);\r\n// SGFSyntaxError.prototype.constructor = SGFSyntaxError;\r\n\r\nexport default SGFSyntaxError;\r\n","import SGFSyntaxError from './SGFSyntaxError';\r\nimport { PropIdent, SGFProperties, SGFCollection, SGFGameTree, SGFNode } from './sgfTypes';\r\n\r\n/**\r\n * Contains methods for parsing sgf string.\r\n * @module SGFParser\r\n */\r\n\r\nconst CODE_A = 'A'.charCodeAt(0);\r\nconst CODE_Z = 'Z'.charCodeAt(0);\r\nconst CODE_WHITE_CHAR = ' '.charCodeAt(0);\r\n\r\nfunction isCharUCLetter(char: string) {\r\n  if (!char) {\r\n    return false;\r\n  }\r\n\r\n  const charCode = char.charCodeAt(0);\r\n  return charCode >= CODE_A && charCode <= CODE_Z;\r\n}\r\n\r\n/**\r\n * Class for parsing of sgf files. Can be used for parsing of SGF fragments as well.\r\n */\r\n\r\nexport default class SGFParser {\r\n  /** SGF string to be parsed */\r\n  sgfString: string;\r\n\r\n  /** Current character position */\r\n  position: number = 0;\r\n\r\n  /** Current line number */\r\n  lineNo: number = 1;\r\n\r\n  /** Current char number (on the line) */\r\n  charNo: number = 0;\r\n\r\n  /**\r\n   * Creates new instance of SGF parser with SGF loaded ready to be parsed.\r\n   * @param sgf string to parse.\r\n   */\r\n  constructor(sgf: string) {\r\n    this.sgfString = sgf;\r\n  }\r\n\r\n  /**\r\n   * Returns current significant character (ignoring whitespace characters).\r\n   * If there is end of string, return undefined.\r\n   */\r\n  protected currentChar(): string {\r\n    while (this.sgfString.charCodeAt(this.position) <= CODE_WHITE_CHAR) {\r\n      // While the character is a whitespace, increase position pointer and line and column numbers.\r\n      this.nextChar();\r\n    }\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Move pointer to next character and return it (including whitespace).\r\n   */\r\n  protected nextChar() {\r\n    if (this.sgfString[this.position] === '\\n') {\r\n      this.charNo = 0;\r\n      this.lineNo++;\r\n    } else {\r\n      this.charNo++;\r\n    }\r\n    this.position++;\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Reads current significant character and if it isn't equal with the argument, throws an error.\r\n   * Then move pointer to next character.\r\n   */\r\n  protected processChar(char: string) {\r\n    if (this.currentChar() !== char) {\r\n      throw new SGFSyntaxError(`Unexpected character ${this.currentChar()}. Character ${char} was expected.`, this);\r\n    }\r\n\r\n    return this.nextChar();\r\n  }\r\n\r\n  /**\r\n   * Parse SGF property value - `\"[\" CValueType \"]\"`.\r\n   * @param optional\r\n   */\r\n  parsePropertyValue(optional?: boolean): string {\r\n    if (optional && this.currentChar() !== '[') {\r\n      return;\r\n    }\r\n\r\n    let value = '';\r\n\r\n    // process \"[\" and read first char\r\n    let char = this.processChar('[');\r\n\r\n    while (char !== ']') {\r\n      if (!char) {\r\n        // char mustn't be undefined\r\n        throw new SGFSyntaxError('End of SGF inside of property', this);\r\n      } else if (char === '\\\\') {\r\n        // if there is character '\\' save next character\r\n        char = this.nextChar();\r\n\r\n        if (!char) {\r\n          // char have to exist of course\r\n          throw new SGFSyntaxError('End of SGF inside of property', this);\r\n        } else if (char === '\\n') {\r\n          // ignore new line, otherwise save\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // save the character\r\n      value += char;\r\n\r\n      // and move to next one\r\n      char = this.nextChar();\r\n    }\r\n\r\n    this.processChar(']');\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Reads the property identifiers (One or more UC letters) - `UcLetter { UcLetter }`.\r\n   */\r\n  parsePropertyIdent(): PropIdent {\r\n    let ident = '';\r\n\r\n    // Read current significant character\r\n    let char = this.currentChar();\r\n\r\n    if (!isCharUCLetter(char)) {\r\n      throw new SGFSyntaxError('Property identifier must consists from upper case letters.', this);\r\n    }\r\n\r\n    ident += char;\r\n\r\n    while (char = this.nextChar()) {\r\n      if (!isCharUCLetter(char)) {\r\n        break;\r\n      }\r\n\r\n      ident += char;\r\n    }\r\n\r\n    return ident as PropIdent;\r\n  }\r\n\r\n  /**\r\n   * Parses sequence of property values - `PropValue { PropValue }`.\r\n   */\r\n  parsePropertyValues() {\r\n    const values: string[] = [];\r\n    let value = this.parsePropertyValue();\r\n\r\n    if (value) {\r\n      values.push(value);\r\n    }\r\n\r\n    while (value = this.parsePropertyValue(true)) {\r\n      values.push(value);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF property - `PropIdent PropValue { PropValue }`.\r\n   */\r\n  parseProperty(): [PropIdent, string[]] {\r\n    if (!isCharUCLetter(this.currentChar())) {\r\n      return;\r\n    }\r\n\r\n    return [this.parsePropertyIdent(), this.parsePropertyValues()];\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF node - `\";\" { Property }`.\r\n   */\r\n  parseNode(): SGFNode {\r\n    this.processChar(';');\r\n\r\n    const properties: SGFProperties = {};\r\n    let property: [PropIdent, string[]];\r\n\r\n    while (property = this.parseProperty()) {\r\n      properties[property[0]] = property[1];\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF Sequence - `Node { Node }`.\r\n   */\r\n  parseSequence(): SGFNode[] {\r\n    const sequence: SGFNode[] = [];\r\n\r\n    sequence.push(this.parseNode());\r\n\r\n    while (this.currentChar() === ';') {\r\n      sequence.push(this.parseNode());\r\n    }\r\n\r\n    return sequence;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *GameTree* - `\"(\" Sequence { GameTree } \")\"`.\r\n   */\r\n  parseGameTree(): SGFGameTree {\r\n    this.processChar('(');\r\n\r\n    const sequence = this.parseSequence();\r\n    let children: SGFGameTree[] = [];\r\n\r\n    if (this.currentChar() === '(') {\r\n      children = this.parseCollection();\r\n    }\r\n\r\n    this.processChar(')');\r\n\r\n    return { sequence, children };\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *Collection* - `Collection = GameTree { GameTree }`. This is the main method for parsing SGF file.\r\n   */\r\n  parseCollection(): SGFCollection {\r\n    const gameTrees: SGFCollection = [];\r\n    gameTrees.push(this.parseGameTree());\r\n\r\n    while (this.currentChar() === '(') {\r\n      gameTrees.push(this.parseGameTree());\r\n    }\r\n\r\n    return gameTrees;\r\n  }\r\n}\r\n","/* global document, window */\r\nimport CanvasBoard from './CanvasBoard';\r\nimport BoardObject from './boardObjects/BoardObject';\r\n\r\n/**\r\n * @class\r\n * Implements one layer of the HTML5 canvas\r\n */\r\n\r\nexport default class CanvasLayer {\r\n  element: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  pixelRatio: number;\r\n  board: CanvasBoard;\r\n  drawFunctionName: string;\r\n\r\n  constructor(board: CanvasBoard, drawFunctionName: string) {\r\n    this.board = board;\r\n    this.drawFunctionName = drawFunctionName;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.element = document.createElement('canvas');\r\n    this.element.style.position = 'absolute';\r\n    // this.element.style.zIndex = weight.toString(10);\r\n    this.element.style.width = '100%';\r\n    this.element.style.height = '100%';\r\n\r\n    this.context = this.element.getContext('2d');\r\n    this.context.scale(this.board.pixelRatio, this.board.pixelRatio);\r\n    this.context.save();\r\n\r\n    this.board.boardElement.appendChild(this.element);\r\n  }\r\n\r\n  resize(width: number, height: number) {\r\n    const linesShift = this.board.config.theme.linesShift;\r\n\r\n    this.element.width = width;\r\n    this.element.height = height;\r\n\r\n    this.context.transform(1, 0, 0, 1, linesShift, linesShift);\r\n  }\r\n\r\n  draw(boardObject: BoardObject) {\r\n    if ((boardObject as any)[this.drawFunctionName]) {\r\n      try {\r\n        const leftOffset = this.board.getX(boardObject.x);\r\n        const topOffset = this.board.getY(boardObject.y);\r\n        const fieldSize = this.board.fieldSize;\r\n\r\n        // create a \"sandbox\" for drawing function\r\n        this.context.save();\r\n\r\n        this.context.transform(\r\n          fieldSize * boardObject.scaleX,\r\n          0, 0,\r\n          fieldSize * boardObject.scaleY,\r\n          leftOffset,\r\n          topOffset,\r\n        );\r\n        this.context.rotate(boardObject.rotate);\r\n        this.context.globalAlpha = boardObject.opacity;\r\n\r\n        (boardObject as any)[this.drawFunctionName](this.context, this.board.config);\r\n\r\n        // restore context\r\n        this.context.restore();\r\n      } catch (err) {\r\n        // If the board is too small some canvas painting function can throw an exception, but we don't\r\n        // want to break our app\r\n        // tslint:disable-next-line:no-console\r\n        console.error(`Object couldn't be rendered. Error: ${err.message}`, boardObject);\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\r\n  }\r\n}\r\n","import CanvasLayer from './CanvasLayer';\r\nimport CanvasBoard from './CanvasBoard';\r\n\r\n/**\r\n * @class\r\n * @extends WGo.CanvasBoard.CanvasLayer\r\n * Layer for shadows. It is slightly translated.\r\n */\r\n\r\nexport default class ShadowLayer extends CanvasLayer {\r\n  resize(width: number, height: number) {\r\n    super.resize(width, height);\r\n    this.context.transform(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      this.board.config.theme.shadowOffsetX * this.board.fieldSize,\r\n      this.board.config.theme.shadowOffsetY * this.board.fieldSize,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Generic shadow draw handler for all stones\r\n *\r\n * \"shadowBlur\" 0-1\r\n * 0 - no blur - createRadialGradient(0, 0, stoneRadius, 0, 0, stoneRadius)\r\n * 1 - maximal blur - createRadialGradient(0, 0, 0, 0, 0, 8/7*stoneRadius)\r\n */\r\n\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default function (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n  const stoneRadius = board.config.theme.stoneSize;\r\n  const blur = board.config.theme.shadowBlur;\r\n\r\n  const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n  const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n  const gradient = canvasCtx.createRadialGradient(0, 0, startRadius, 0, 0, stopRadius);\r\n  gradient.addColorStop(0, board.config.theme.shadowColor);\r\n  gradient.addColorStop(1, board.config.theme.shadowTransparentColor);\r\n\r\n  canvasCtx.beginPath();\r\n  canvasCtx.fillStyle = gradient;\r\n  canvasCtx.arc(0, 0, stopRadius, 0, 2 * Math.PI, true);\r\n  canvasCtx.fill();\r\n}\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = '#000';\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      let radGrad = canvasCtx.createRadialGradient(\r\n        0.4 * stoneRadius,\r\n        0.4 * stoneRadius,\r\n        0,\r\n        0.5 * stoneRadius,\r\n        0.5 * stoneRadius,\r\n        stoneRadius,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(32,32,32,1)');\r\n      radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(\r\n        0,\r\n        0,\r\n        stoneRadius,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.fill();\r\n\r\n      radGrad = canvasCtx.createRadialGradient(\r\n        -0.4 * stoneRadius,\r\n        -0.4 * stoneRadius,\r\n        0.05 * stoneRadius,\r\n        -0.5 * stoneRadius,\r\n        -0.5 * stoneRadius,\r\n        1.5 * stoneRadius,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(64,64,64,1)');\r\n      radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(\r\n        0,\r\n        0,\r\n        stoneRadius,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\n// shell stone helping functions\r\nconst shellSeed = Math.ceil(Math.random() * 9999999);\r\n\r\n// tslint:disable-next-line:max-line-length\r\nconst drawShellLine = function (ctx: CanvasRenderingContext2D, x: number, y: number, r: number, startAngle: number, endAngle: number, factor: number, thickness: number) {\r\n  ctx.strokeStyle = 'rgba(64,64,64,0.2)';\r\n\r\n  ctx.lineWidth = (r / 30) * thickness;\r\n  ctx.beginPath();\r\n\r\n  const radius = r * 0.9;\r\n\r\n  const x1 = x + radius * Math.cos(startAngle * Math.PI);\r\n  const y1 = y + radius * Math.sin(startAngle * Math.PI);\r\n  const x2 = x + radius * Math.cos(endAngle * Math.PI);\r\n  const y2 = y + radius * Math.sin(endAngle * Math.PI);\r\n\r\n  let m;\r\n  let angle;\r\n  let diffX;\r\n  let diffY;\r\n\r\n  if (x2 > x1) {\r\n    m = (y2 - y1) / (x2 - x1);\r\n    angle = Math.atan(m);\r\n  } else if (x2 === x1) {\r\n    angle = Math.PI / 2;\r\n  } else {\r\n    m = (y2 - y1) / (x2 - x1);\r\n    angle = Math.atan(m) - Math.PI;\r\n  }\r\n\r\n  const c = factor * radius;\r\n  diffX = Math.sin(angle) * c;\r\n  diffY = Math.cos(angle) * c;\r\n\r\n  const bx1 = x1 + diffX;\r\n  const by1 = y1 - diffY;\r\n\r\n  const bx2 = x2 + diffX;\r\n  const by2 = y2 - diffY;\r\n\r\n  ctx.moveTo(x1, y1);\r\n  ctx.bezierCurveTo(bx1, by1, bx2, by2, x2, y2);\r\n  ctx.stroke();\r\n};\r\n\r\nconst drawShell = function (arg: any) {\r\n  let fromAngle = arg.angle;\r\n  let toAngle = arg.angle;\r\n\r\n  for (let i = 0; i < arg.lines.length; i++) {\r\n    fromAngle += arg.lines[i];\r\n    toAngle -= arg.lines[i];\r\n    drawShellLine(arg.ctx, arg.x, arg.y, arg.radius, fromAngle, toAngle, arg.factor, arg.thickness);\r\n  }\r\n};\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = '#aaa';\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      // do shell magic here\r\n      const type = shellSeed % (3 + args.field.x * board.config.size + args.field.y) % 3;\r\n      const z = board.config.size * board.config.size + args.field.x * board.config.size + args.field.y;\r\n      const angle = (2 / z) * (shellSeed % z);\r\n\r\n      if (type === 0) {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.10, 0.12, 0.11, 0.10, 0.09, 0.09, 0.09, 0.09],\r\n          factor: 0.25,\r\n          thickness: 1.75,\r\n        });\r\n      } else if (type === 1) {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.10, 0.09, 0.08, 0.07, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06],\r\n          factor: 0.2,\r\n          thickness: 1.5,\r\n        });\r\n      } else {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.12, 0.14, 0.13, 0.12, 0.12, 0.12],\r\n          factor: 0.3,\r\n          thickness: 2,\r\n        });\r\n      }\r\n\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        stoneRadius / 3,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        5 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(255,255,255,0.9)');\r\n      radGrad.addColorStop(1, 'rgba(255,255,255,0)');\r\n\r\n      // add radial gradient //\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  // draw handler for stone layer\r\n  drawField: {\r\n    // drawing function - args object contain info about drawing object, board is main board object\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radgrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        1,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radgrad.addColorStop(0, '#666');\r\n      radgrad.addColorStop(1, '#000');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radgrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  // draw handler for stone layer\r\n  drawField: {\r\n    // drawing function - args object contain info about drawing object, board is main board object\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radgrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        stoneRadius / 3,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        5 * stoneRadius / 5,\r\n      );\r\n\r\n      radgrad.addColorStop(0, '#fff');\r\n      radgrad.addColorStop(1, '#aaa');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radgrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        1 * stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, '#111');\r\n      radGrad.addColorStop(1, '#000');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n      canvasCtx.strokeStyle = '#ccc';\r\n      canvasCtx.arc(-stoneRadius / 8, -stoneRadius / 8, stoneRadius / 2, Math.PI, 1.5 * Math.PI);\r\n\r\n      canvasCtx.stroke();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        2 * stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, '#fff');\r\n      radGrad.addColorStop(1, '#ddd');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n      canvasCtx.strokeStyle = '#999';\r\n      canvasCtx.arc(stoneRadius / 8, stoneRadius / 8, stoneRadius / 2, 0, Math.PI / 2, false);\r\n\r\n      canvasCtx.stroke();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","// Black and white stone\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default function (color: string) {\r\n  return {\r\n    drawField: {\r\n      stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        const stoneSize = board.config.theme.stoneSize;\r\n        const lw = board.config.theme.markupLinesWidth;\r\n\r\n        canvasCtx.fillStyle = color;\r\n\r\n        canvasCtx.beginPath();\r\n        canvasCtx.arc(0, 0, stoneSize - lw / 2, 0, 2 * Math.PI, true);\r\n        canvasCtx.fill();\r\n\r\n        canvasCtx.lineWidth = lw;\r\n        canvasCtx.strokeStyle = 'black';\r\n        canvasCtx.stroke();\r\n      },\r\n    },\r\n  };\r\n}\r\n","/* global window */\r\n\r\nimport shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { FieldDrawHandler, BoardFieldObject } from '../types';\r\n\r\n// Check if image has been loaded properly\r\n// see https://stereochro.me/ideas/detecting-broken-images-js\r\nfunction isOkay(img: any) {\r\n  if (typeof img === 'string') { return false; }\r\n  if (!img.complete) { return false; }\r\n  if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// Shadow handler for the 'REALISTIC' rendering mode\r\n// handler for image based stones\r\nexport default function (graphic: any[], fallback: FieldDrawHandler) {\r\n  const randSeed = Math.ceil(Math.random() * 9999999);\r\n  let redrawRequest: number;\r\n\r\n  return {\r\n    drawField: {\r\n      stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        const stoneRadius = board.config.theme.stoneSize;\r\n        const count = graphic.length;\r\n        const idx = randSeed % (count + args.field.x * board.config.size + args.field.y) % count;\r\n\r\n        if (typeof graphic[idx] === 'string') {\r\n          // The image has not been loaded yet\r\n          const stoneGraphic = new Image();\r\n          // Redraw the whole board after the image has been loaded.\r\n          // This prevents 'missing stones' and similar graphical errors\r\n          // especially on slower internet connections.\r\n          stoneGraphic.onload = () => {\r\n            // make sure board will be redraw just once, and after every stone is processed\r\n            if (redrawRequest != null) {\r\n              window.clearTimeout(redrawRequest);\r\n            }\r\n            redrawRequest = window.setTimeout(() => {\r\n              board.redraw();\r\n              redrawRequest = null;\r\n            }, 1);\r\n          };\r\n          stoneGraphic.src = graphic[idx];\r\n          graphic[idx] = stoneGraphic;\r\n        }\r\n\r\n        if (isOkay(graphic[idx])) {\r\n          canvasCtx.drawImage(graphic[idx], -stoneRadius, -stoneRadius, 2 * stoneRadius, 2 * stoneRadius);\r\n        } else {\r\n          // Fall back to SHELL handler if there was a problem loading the image\r\n          fallback.drawField.stone(canvasCtx, args, board);\r\n        }\r\n      },\r\n      shadow,\r\n    },\r\n  };\r\n}\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(0, 0, 0.25, 0, 2 * Math.PI, true);\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.rect(-0.25, -0.25, 0.5, 0.5);\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(0, 0 - 0.25);\r\n      canvasCtx.lineTo(-0.25, 0.166666);\r\n      canvasCtx.lineTo(0.25, 0.166666);\r\n      canvasCtx.closePath();\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      const font = params.font || board.config.theme.font || '';\r\n\r\n      canvasCtx.fillStyle = params.color || board.config.theme.markupNoneColor;\r\n\r\n      let fontSize = 0.5;\r\n\r\n      if (params.text.length === 1) {\r\n        fontSize = 0.75;\r\n      } else if (params.text.length === 2) {\r\n        fontSize = 0.6;\r\n      }\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.textBaseline = 'middle';\r\n      canvasCtx.textAlign = 'center';\r\n      canvasCtx.font = `${fontSize}px ${font}`;\r\n      canvasCtx.fillText(params.text, 0, 0.02 + (fontSize - 0.5) * 0.08, 1);\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.fillStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.rect(-0.5, -0.5, 1, 1);\r\n      canvasCtx.fill();\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth * 1.5;\r\n      canvasCtx.lineCap = 'round';\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(-0.20, -0.20);\r\n      canvasCtx.lineTo(0.20, 0.20);\r\n      canvasCtx.moveTo(0.20, -0.20);\r\n      canvasCtx.lineTo(-0.20, 0.20);\r\n      canvasCtx.stroke();\r\n      canvasCtx.lineCap = 'butt';\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = (params.lineWidth || board.config.theme.markupLinesWidth) * 2;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(\r\n        -0.5 / 3,\r\n        -0.5 / 3,\r\n        0.5 / 6,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.stroke();\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(\r\n        0.5 / 3,\r\n        -0.5 / 3,\r\n        0.5 / 6,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.stroke();\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(-0.5 / 1.5, 0);\r\n      canvasCtx.bezierCurveTo(\r\n        -0.5 / 1.5,\r\n        0.5 / 2,\r\n        0.5 / 1.5,\r\n        0.5 / 2,\r\n        0.5 / 1.5,\r\n        0,\r\n      );\r\n      canvasCtx.stroke();\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { FieldDrawHandler, BoardFieldObject } from '../types';\r\n\r\n// transparent modificator\r\n\r\nexport default function (drawHandler: FieldDrawHandler) {\r\n  return {\r\n    drawField: {\r\n      stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        const params = args.params || {};\r\n\r\n        if (params.alpha) {\r\n          canvasCtx.globalAlpha = params.alpha;\r\n        } else {\r\n          canvasCtx.globalAlpha = 0.3;\r\n        }\r\n        drawHandler.drawField.stone.call(null, canvasCtx, args, board);\r\n        canvasCtx.globalAlpha = 1;\r\n      },\r\n    },\r\n  };\r\n}\r\n","import CanvasBoard from '..';\r\nimport { FieldDrawHandler, BoardFieldObject } from '../types';\r\n\r\n// size reducing modifier\r\n\r\nexport default function (drawHandler: FieldDrawHandler) {\r\n  return {\r\n    drawField: {\r\n      stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        canvasCtx.scale(0.5, 0.5);\r\n        drawHandler.drawField.stone.call(null, canvasCtx, args, board);\r\n        canvasCtx.scale(2, 2);\r\n      },\r\n    },\r\n  };\r\n}\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    grid (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      canvasCtx.clearRect(-stoneRadius, -stoneRadius, 2 * stoneRadius, 2 * stoneRadius);\r\n    },\r\n  },\r\n};\r\n","import { CanvasBoardConfig } from '../types';\r\n\r\nexport default abstract class BoardObject<P = {}> {\r\n  x: number;\r\n  y: number;\r\n  scaleX: number;\r\n  scaleY: number;\r\n  rotate: number;\r\n  opacity: number;\r\n  drawStone?(context: CanvasRenderingContext2D, config: CanvasBoardConfig): void;\r\n  drawShadow?(context: CanvasRenderingContext2D, config: CanvasBoardConfig): void;\r\n  drawGrid?(context: CanvasRenderingContext2D, config: CanvasBoardConfig): void;\r\n  params: P;\r\n\r\n  constructor(params: P = {} as any) {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    this.rotate = 0;\r\n    this.params = params;\r\n  }\r\n\r\n  setPosition(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setScale(factor: number) {\r\n    this.scaleX = factor;\r\n    this.scaleY = factor;\r\n  }\r\n\r\n  setOpacity(value: number) {\r\n    this.opacity = value;\r\n  }\r\n}\r\n","import BoardObject from './BoardObject';\r\nimport { CanvasBoardConfig } from '../types';\r\n\r\ninterface CircleParams {\r\n  color?: string;\r\n  lineWidth?: number;\r\n  fillColor?: string;\r\n}\r\n\r\nexport default class Circle extends BoardObject<CircleParams> {\r\n  drawStone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    canvasCtx.strokeStyle = this.params.color || boardConfig.theme.markupNoneColor;\r\n    canvasCtx.lineWidth = this.params.lineWidth || boardConfig.theme.markupLinesWidth;\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(0, 0, 0.25, 0, 2 * Math.PI, true);\r\n    canvasCtx.stroke();\r\n\r\n    if (this.params.fillColor) {\r\n      canvasCtx.fillStyle = this.params.fillColor;\r\n      canvasCtx.fill();\r\n    }\r\n  }\r\n\r\n  drawGrid(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n    canvasCtx.clearRect(\r\n      -boardConfig.theme.stoneSize,\r\n      -boardConfig.theme.stoneSize,\r\n      boardConfig.theme.stoneSize * 2,\r\n      boardConfig.theme.stoneSize * 2,\r\n    );\r\n  }\r\n}\r\n","import BoardObject from './BoardObject';\r\nimport { CanvasBoardConfig } from '../types';\r\n\r\nexport default class ThemedObject extends BoardObject<any> {\r\n  type: string;\r\n\r\n  constructor(type: string, params: any) {\r\n    super(params);\r\n    this.type = type;\r\n  }\r\n\r\n  drawStone(context: CanvasRenderingContext2D, config: CanvasBoardConfig) {\r\n    if (config.theme.drawHandlers[this.type].prototype.drawStone) {\r\n      config.theme.drawHandlers[this.type].prototype.drawStone.call(this, context, config);\r\n    }\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D, config: CanvasBoardConfig) {\r\n    if (config.theme.drawHandlers[this.type].prototype.drawGrid) {\r\n      config.theme.drawHandlers[this.type].prototype.drawGrid.call(this, context, config);\r\n    }\r\n  }\r\n\r\n  drawShadow(context: CanvasRenderingContext2D, config: CanvasBoardConfig) {\r\n    if (config.theme.drawHandlers[this.type].prototype.drawShadow) {\r\n      config.theme.drawHandlers[this.type].prototype.drawShadow.call(this, context, config);\r\n    }\r\n  }\r\n}\r\n","// Black and white stone\r\nimport { CanvasBoardConfig } from '../types';\r\nimport BoardObject from './BoardObject';\r\n\r\nexport default function simpleStoneFactory(color: string) {\r\n  return (class SimpleStone extends BoardObject {\r\n    drawStone(canvasCtx: CanvasRenderingContext2D, boardConfig: CanvasBoardConfig) {\r\n      const stoneSize = boardConfig.theme.stoneSize;\r\n      const lw = boardConfig.theme.markupLinesWidth;\r\n\r\n      canvasCtx.fillStyle = color;\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(0, 0, stoneSize - lw / 2, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      canvasCtx.lineWidth = lw;\r\n      canvasCtx.strokeStyle = 'black';\r\n      canvasCtx.stroke();\r\n    }\r\n  });\r\n}\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport coordinatesHandler from '../drawHandlers/coordinates';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport gridFieldClear from '../drawHandlers/gridFieldClear';\r\nimport gridHandler from '../drawHandlers/grid';\r\nimport { Circle, simpleStoneFactory } from '../boardObjects';\r\n//import { boardObjects } from '../boardObjects';\r\n\r\nconst baseTheme: CanvasBoardTheme = {\r\n  // basic\r\n  stoneSize: 0.47,\r\n\r\n  // markup\r\n  markupBlackColor: 'rgba(255,255,255,0.9)',\r\n  markupWhiteColor: 'rgba(0,0,0,0.7)',\r\n  markupNoneColor: 'rgba(0,0,0,0.7)',\r\n  markupLinesWidth: 0.05,\r\n\r\n  // shadows\r\n  shadowColor: 'rgba(62,32,32,0.5)',\r\n  shadowTransparentColor: 'rgba(62,32,32,0)',\r\n  shadowBlur: 0.25,\r\n  shadowOffsetX: 0.07,\r\n  shadowOffsetY: 0.13,\r\n\r\n  // other\r\n  font: 'calibri',\r\n  linesShift: -0.5,\r\n  backgroundColor: '#CEB053',\r\n  backgroundImage: '',\r\n\r\n  // grid\r\n  grid: {\r\n    linesWidth: 0.03,\r\n    linesColor: '#654525',\r\n    starColor: '#531',\r\n    starSize: 0.07,\r\n  },\r\n\r\n  // coordinates\r\n  coordinates: {\r\n    color: '#531',\r\n    bold: false,\r\n    x: 'ABCDEFGHJKLMNOPQRSTUVWXYZ',\r\n    y: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n  },\r\n\r\n  drawHandlers: {\r\n    CR: Circle as any,\r\n    B: simpleStoneFactory('#222'),\r\n    W: simpleStoneFactory('#eee'),\r\n    //CR: drawHandlers.circle,\r\n    //LB: drawHandlers.label,\r\n    //SQ: drawHandlers.square,\r\n    //TR: drawHandlers.triangle,\r\n    //MA: drawHandlers.xMark,\r\n    //SL: drawHandlers.dot,\r\n    //SM: drawHandlers.smileyFace,\r\n    //gridFieldClear,\r\n  },\r\n};\r\n\r\nexport default baseTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst realisticTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: 'images/wood1.jpg',\r\n  stoneSize: 0.48,\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: drawHandlers.realisticStone([\r\n      'images/stones/black00_128.png',\r\n      'images/stones/black01_128.png',\r\n      'images/stones/black02_128.png',\r\n      'images/stones/black03_128.png',\r\n    ], drawHandlers.shellStoneBlack),\r\n    W: drawHandlers.realisticStone([\r\n      'images/stones/white00_128.png',\r\n      'images/stones/white01_128.png',\r\n      'images/stones/white02_128.png',\r\n      'images/stones/white03_128.png',\r\n      'images/stones/white04_128.png',\r\n      'images/stones/white05_128.png',\r\n      'images/stones/white06_128.png',\r\n      'images/stones/white07_128.png',\r\n      'images/stones/white08_128.png',\r\n      'images/stones/white09_128.png',\r\n      'images/stones/white10_128.png',\r\n    ], drawHandlers.shellStoneWhite),\r\n  },\r\n  /*grid: {\r\n    ...baseTheme.grid,\r\n    params: {\r\n      ...baseTheme.grid.params,\r\n      linesWidth: 0.035,\r\n      starSize: 0.1,\r\n      linesColor: '#000',\r\n    },\r\n  },*/\r\n};\r\n\r\nexport default realisticTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst modernTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: '',\r\n\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: drawHandlers.shellStoneBlack,\r\n    W: drawHandlers.shellStoneWhite,\r\n  },\r\n};\r\n\r\nexport default modernTheme;\r\n","// add here all themes, which should be publicly exposed\r\nimport realisticTheme from './realisticTheme';\r\nimport modernTheme from './modernTheme';\r\nimport baseTheme from './baseTheme';\r\n\r\nexport { baseTheme, realisticTheme, modernTheme };\r\n","import { baseTheme } from './themes';\r\nimport { CanvasBoardConfig } from './types';\r\n\r\nconst canvasBoardDefaultConfig: CanvasBoardConfig = {\r\n  size: 19,\r\n  width: 0,\r\n  height: 0,\r\n  starPoints: {\r\n    5: [{ x: 2, y: 2 }],\r\n    7: [{ x: 3, y: 3 }],\r\n    8: [{ x: 2, y: 2 }, { x: 5, y: 2 }, { x: 2, y: 5 }, { x: 5, y: 5 }],\r\n    9: [{ x: 2, y: 2 }, { x: 6, y: 2 }, { x: 4, y: 4 }, { x: 2, y: 6 }, { x: 6, y: 6 }],\r\n    10: [{ x: 2, y: 2 }, { x: 7, y: 2 }, { x: 2, y: 7 }, { x: 7, y: 7 }],\r\n    11: [{ x: 2, y: 2 }, { x: 8, y: 2 }, { x: 5, y: 5 }, { x: 2, y: 8 }, { x: 8, y: 8 }],\r\n    12: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 }],\r\n    13: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 6, y: 6 }, { x: 3, y: 9 }, { x: 9, y: 9 }],\r\n    14: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 }],\r\n    15: [{ x: 3, y: 3 }, { x: 11, y: 3 }, { x: 7, y: 7 }, { x: 3, y: 11 }, { x: 11, y: 11 }],\r\n    16: [{ x: 3, y: 3 }, { x: 12, y: 3 }, { x: 3, y: 12 }, { x: 12, y: 12 }],\r\n    17: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 13, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 },\r\n    { x: 13, y: 8 }, { x: 3, y: 13 }, { x: 8, y: 13 }, { x: 13, y: 13 }],\r\n    18: [{ x: 3, y: 3 }, { x: 14, y: 3 }, { x: 3, y: 14 }, { x: 14, y: 14 }],\r\n    19: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 15, y: 3 }, { x: 3, y: 9 }, { x: 9, y: 9 },\r\n    { x: 15, y: 9 }, { x: 3, y: 15 }, { x: 9, y: 15 }, { x: 15, y: 15 }],\r\n    20: [{ x: 3, y: 3 }, { x: 16, y: 3 }, { x: 3, y: 16 }, { x: 16, y: 16 }],\r\n    21: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 17, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 },\r\n    { x: 17, y: 10 }, { x: 3, y: 17 }, { x: 10, y: 17 }, { x: 17, y: 17 }],\r\n  },\r\n  viewport: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  coordinates: false,\r\n  theme: baseTheme,\r\n  marginSize: 0.25,\r\n  snapToGrid: false,\r\n};\r\n\r\nexport default canvasBoardDefaultConfig;\r\n","export type PartialRecursive<T> = {\r\n  [P in keyof T]?: T[P] | PartialRecursive<T[P]>;\r\n};\r\n\r\n/**\r\n * Helper function for merging default config with provided config.\r\n *\r\n * @param defaults\r\n * @param config\r\n */\r\nexport default function makeConfig<T>(defaults: T, config: PartialRecursive<T>): T {\r\n  const mergedConfig: any = {};\r\n  const defaultKeys = Object.keys(defaults);\r\n  defaultKeys.forEach((key) => {\r\n    if (typeof (config as any)[key] === 'object' && !Array.isArray((config as any)[key])) {\r\n      mergedConfig[key] = makeConfig((defaults as any)[key], (config as any)[key]);\r\n    } else if ((config as any)[key] !== undefined) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    } else {\r\n      mergedConfig[key] = (defaults as any)[key];\r\n    }\r\n  });\r\n\r\n  Object.keys(config).forEach((key) => {\r\n    if (defaultKeys.indexOf(key) === -1) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    }\r\n  });\r\n\r\n  return mergedConfig;\r\n}\r\n","/**\r\n * Simple base class for event handling. It tries to follow Node.js EventEmitter class API,\r\n * but contains only basic methods.\r\n */\r\nexport default class EventEmitter {\r\n  // tslint:disable-next-line:variable-name\r\n  private _events: {[eventName: string]: Function[]} = {};\r\n\r\n  on(evName: string, callback: Function) {\r\n    this._events[evName] = this._events[evName] || [];\r\n    this._events[evName].push(callback);\r\n  }\r\n\r\n  off(evName: string, callback: Function) {\r\n    if (this._events[evName]) {\r\n      if (callback == null) {\r\n        this._events[evName] = [];\r\n      }\r\n      this._events[evName] = this._events[evName].filter(fn => fn !== callback);\r\n    }\r\n  }\r\n\r\n  emit(evName: string, ...args: any[]) {\r\n    if (this._events[evName]) {\r\n      this._events[evName].forEach(fn => fn(...args));\r\n    }\r\n  }\r\n}\r\n","import CanvasLayer from './CanvasLayer';\r\n\r\nexport default class GridLayer extends CanvasLayer {\r\n  init() {\r\n    super.init();\r\n    this.drawGrid();\r\n  }\r\n\r\n  clear() {\r\n    super.clear();\r\n    this.drawGrid();\r\n  }\r\n\r\n  drawGrid() {\r\n    // draw grid\r\n    let tmp;\r\n    const params = this.board.config.theme.grid;\r\n\r\n    this.context.beginPath();\r\n    this.context.lineWidth = params.linesWidth * this.board.fieldSize;\r\n    this.context.strokeStyle = params.linesColor;\r\n\r\n    const tx = Math.round(this.board.getX(0));\r\n    const ty = Math.round(this.board.getY(0));\r\n    const bw = Math.round((this.board.config.size - 1) * this.board.fieldSize);\r\n    const bh = Math.round((this.board.config.size - 1) * this.board.fieldSize);\r\n\r\n    this.context.strokeRect(tx, ty, bw, bh);\r\n\r\n    for (let i = 1; i < this.board.config.size - 1; i++) {\r\n      tmp = Math.round(this.board.getX(i));\r\n      this.context.moveTo(tmp, ty);\r\n      this.context.lineTo(tmp, ty + bh);\r\n\r\n      tmp = Math.round(this.board.getY(i));\r\n      this.context.moveTo(tx, tmp);\r\n      this.context.lineTo(tx + bw, tmp);\r\n    }\r\n\r\n    this.context.stroke();\r\n\r\n    // draw stars\r\n    this.context.fillStyle = params.starColor;\r\n\r\n    if (this.board.config.starPoints[this.board.config.size]) {\r\n      for (const key in this.board.config.starPoints[this.board.config.size]) {\r\n        this.context.beginPath();\r\n        this.context.arc(\r\n          this.board.getX(this.board.config.starPoints[this.board.config.size][key].x),\r\n          this.board.getY(this.board.config.starPoints[this.board.config.size][key].y),\r\n          params.starSize * this.board.fieldSize, 0, 2 * Math.PI, true,\r\n        );\r\n        this.context.fill();\r\n      }\r\n    }\r\n\r\n    if (this.board.config.coordinates) {\r\n      this.drawCoordinates();\r\n    }\r\n  }\r\n\r\n  drawCoordinates() {\r\n    let t;\r\n    const params = this.board.config.theme.coordinates;\r\n\r\n    this.context.fillStyle = params.color;\r\n    this.context.textBaseline = 'middle';\r\n    this.context.textAlign = 'center';\r\n    // tslint:disable-next-line:max-line-length\r\n    this.context.font = `${params.bold ? 'bold ' : ''}${this.board.fieldSize / 2}px ${this.board.config.theme.font || ''}`;\r\n\r\n    const xRight = this.board.getX(-0.75);\r\n    const xLeft = this.board.getX(this.board.config.size - 0.25);\r\n    const yTop = this.board.getY(-0.75);\r\n    const yBottom = this.board.getY(this.board.config.size - 0.25);\r\n\r\n    const coordinatesX = params.x;\r\n    const coordinatesY = params.y;\r\n\r\n    for (let i = 0; i < this.board.config.size; i++) {\r\n      t = this.board.getY(i);\r\n      this.context.fillText(coordinatesX[i] as string, xRight, t);\r\n      this.context.fillText(coordinatesX[i] as string, xLeft, t);\r\n\r\n      t = this.board.getX(i);\r\n      this.context.fillText(coordinatesY[i] as string, t, yTop);\r\n      this.context.fillText(coordinatesY[i] as string, t, yBottom);\r\n    }\r\n\r\n    this.context.fillStyle = 'black';\r\n  }\r\n}\r\n","/* global document, window */\r\n\r\n/**\r\n * Contains implementation of go board.\r\n * @module CanvasBoard\r\n */\r\n\r\nimport ShadowLayer from './ShadowLayer';\r\nimport CanvasLayer from './CanvasLayer';\r\nimport defaultConfig from './defaultConfig';\r\nimport {\r\n  CanvasBoardConfig,\r\n  BoardViewport,\r\n  BoardFieldObject,\r\n  BoardFreeObject,\r\n  DrawHandler,\r\n  FreeDrawHandler,\r\n  FieldDrawHandler,\r\n} from './types';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport { Point } from '../types';\r\nimport BoardObject from './boardObjects/BoardObject';\r\nimport Grid from './boardObjects/Grid';\r\nimport Coordinates from './boardObjects/Coordinates';\r\nimport GridLayer from './GridLayer';\r\n\r\nfunction affectsLayer(layer: string) {\r\n  return (handler: DrawHandler): handler is FreeDrawHandler => !!('drawFree' in handler && handler.drawFree[layer]);\r\n}\r\n\r\nfunction isSameField(field1: Point, field2: Point) {\r\n  return field1.x === field2.x && field1.y === field2.y;\r\n}\r\n\r\n/*const getMousePos = function (board: CanvasBoard, e: MouseEvent) {\r\n  // new hopefully better translation of coordinates\r\n\r\n  let x: number;\r\n  let y: number;\r\n\r\n  x = e.layerX * board.pixelRatio;\r\n  x -= board.left;\r\n  x /= board.fieldWidth;\r\n  x = Math.round(x);\r\n\r\n  y = e.layerY * board.pixelRatio;\r\n  y -= board.top;\r\n  y /= board.fieldHeight;\r\n  y = Math.round(y);\r\n\r\n  return {\r\n    x: x >= board.size ? -1 : x,\r\n    y: y >= board.size ? -1 : y,\r\n  };\r\n};*/\r\n\r\nexport default class CanvasBoard extends EventEmitter {\r\n  config: CanvasBoardConfig;\r\n  element: HTMLElement;\r\n  boardElement: HTMLElement;\r\n  pixelRatio: number;\r\n  objects: BoardObject[] = [];\r\n  layers: {\r\n    grid: CanvasLayer;\r\n    shadow: CanvasLayer;\r\n    stone: CanvasLayer;\r\n    [key: string]: CanvasLayer;\r\n  };\r\n\r\n  // following props are computed in resize() method for performance\r\n  width: number;\r\n  height: number;\r\n  leftOffset: number;\r\n  topOffset: number;\r\n  fieldSize: number;\r\n  resizeCallback: (this: Window, ev: UIEvent) => any;\r\n  redrawScheduled: boolean;\r\n\r\n  /**\r\n\t * CanvasBoard class constructor - it creates a canvas board.\r\n\t *\r\n\t * @alias WGo.CanvasBoard\r\n\t * @class\r\n\t * @param {HTMLElement} elem DOM element to put in\r\n\t * @param {Object} config Configuration object. It is object with \"key: value\" structure. Possible configurations are:\r\n\t *\r\n\t * * size: number - size of the board (default: 19)\r\n\t * * width: number - width of the board (default: 0)\r\n\t * * height: number - height of the board (default: 0)\r\n\t * * font: string - font of board writings (!deprecated)\r\n\t * * lineWidth: number - line width of board drawings (!deprecated)\r\n\t * * autoLineWidth: boolean - if set true, line width will be automatically computed accordingly to board size - this\r\n   *   option rewrites 'lineWidth' /and it will keep markups sharp/ (!deprecated)\r\n\t * * starPoints: Object - star points coordinates, defined for various board sizes. Look at CanvasBoard.default for\r\n   *   more info.\r\n\t * * stoneHandler: CanvasBoard.DrawHandler - stone drawing handler (default: CanvasBoard.drawHandlers.SHELL)\r\n\t * * starSize: number - size of star points (default: 1). Radius of stars is dynamic, however you can modify it by\r\n   *   given constant. (!deprecated)\r\n\t * * stoneSize: number - size of stone (default: 1). Radius of stone is dynamic, however you can modify it by given\r\n   *   constant. (!deprecated)\r\n\t * * shadowSize: number - size of stone shadow (default: 1). Radius of shadow is dynamic, however you can modify it by\r\n   *   given constant. (!deprecated)\r\n\t * * background: string - background of the board, it can be either color (#RRGGBB) or url. Empty string means no\r\n   *   background. (default: WGo.DIR+\"wood1.jpg\")\r\n\t * * section: {\r\n\t *     top: number,\r\n\t *     right: number,\r\n\t *     bottom: number,\r\n\t *     left: number\r\n\t *   }\r\n\t *   It defines a section of board to be displayed. You can set a number of rows(or cols) to be skipped on each side.\r\n\t *   Numbers can be negative, in that case there will be more empty space. In default all values are zeros.\r\n\t * * theme: Object - theme object, which defines all graphical attributes of the board. Default theme object\r\n   *   is \"WGo.CanvasBoard.themes.default\". For old look you may use \"WGo.CanvasBoard.themes.old\".\r\n\t *\r\n\t * Note: properties lineWidth, autoLineWidth, starPoints, starSize, stoneSize and shadowSize will be considered only\r\n   * if you set property 'theme' to 'WGo.CanvasBoard.themes.old'.\r\n\t */\r\n\r\n  constructor(elem: HTMLElement, config: PartialRecursive<CanvasBoardConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.config = makeConfig(defaultConfig, config);\r\n\r\n    // init board html\r\n    this.init(elem);\r\n\r\n    // set the pixel ratio for HDPI (e.g. Retina) screens\r\n    this.pixelRatio = window.devicePixelRatio || 1;\r\n\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Initialization method, it is called in constructor. You shouldn't call it, but you can alter it.\r\n   */\r\n\r\n  private init(elem: HTMLElement) {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-board';\r\n    this.element.style.position = 'relative';\r\n    elem.appendChild(this.element);\r\n\r\n    this.boardElement = document.createElement('div');\r\n    this.boardElement.style.position = 'absolute';\r\n    this.boardElement.style.left = '0';\r\n    this.boardElement.style.top = '0';\r\n    this.boardElement.style.right = '0';\r\n    this.boardElement.style.bottom = '0';\r\n    this.boardElement.style.margin = 'auto';\r\n    this.element.appendChild(this.boardElement);\r\n\r\n    this.layers = {\r\n      grid: new GridLayer(this, 'drawGrid'),\r\n      shadow: new ShadowLayer(this, 'drawShadow'),\r\n      stone: new CanvasLayer(this, 'drawStone'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    const countX = this.config.size - this.config.viewport.left - this.config.viewport.right;\r\n    const countY = this.config.size - this.config.viewport.top - this.config.viewport.bottom;\r\n    const topOffset = this.config.marginSize + (this.config.coordinates && !this.config.viewport.top ? 0.5 : 0);\r\n    const rightOffset = this.config.marginSize + (this.config.coordinates && !this.config.viewport.right ? 0.5 : 0);\r\n    const bottomOffset = this.config.marginSize + (this.config.coordinates && !this.config.viewport.bottom ? 0.5 : 0);\r\n    const leftOffset = this.config.marginSize + (this.config.coordinates && !this.config.viewport.left ? 0.5 : 0);\r\n\r\n    if (this.config.width && this.config.height) {\r\n      // exact dimensions\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = Math.min(\r\n        this.width / (countX + leftOffset + rightOffset),\r\n        this.height / (countY + topOffset + bottomOffset),\r\n      );\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.width) {\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + leftOffset + rightOffset);\r\n      this.height = this.fieldSize * (countY + topOffset + bottomOffset);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.height) {\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = this.height / (countY + topOffset + bottomOffset);\r\n      this.width = this.fieldSize * (countX + leftOffset + rightOffset);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else {\r\n      this.element.style.width = 'auto';\r\n      this.width = this.element.offsetWidth * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + leftOffset + rightOffset);\r\n      this.height = this.fieldSize * (countY + topOffset + bottomOffset);\r\n\r\n      if (!this.resizeCallback) {\r\n        this.resizeCallback = () => {\r\n          this.resize();\r\n        };\r\n        window.addEventListener('resize', this.resizeCallback);\r\n      }\r\n    }\r\n\r\n    if (this.config.snapToGrid) {\r\n      this.fieldSize = Math.floor(this.fieldSize);\r\n    }\r\n\r\n    this.leftOffset = this.fieldSize * (leftOffset + 0.5 - this.config.viewport.left);\r\n    this.topOffset = this.fieldSize * (topOffset + 0.5 - this.config.viewport.top);\r\n\r\n    this.element.style.width = `${(this.width / this.pixelRatio)}px`;\r\n    this.element.style.height = `${(this.height / this.pixelRatio)}px`;\r\n\r\n    const boardWidth = (countX + leftOffset + rightOffset) * this.fieldSize;\r\n    const boardHeight = (countY + topOffset + bottomOffset) * this.fieldSize;\r\n\r\n    this.boardElement.style.width = `${(boardWidth / this.pixelRatio)}px`;\r\n    this.boardElement.style.height = `${(boardHeight / this.pixelRatio)}px`;\r\n\r\n    Object.keys(this.layers).forEach((layer) => {\r\n      this.layers[layer].resize(boardWidth, boardHeight);\r\n    });\r\n\r\n    this.redraw();\r\n  }\r\n\r\n  /**\r\n\t * Get absolute X coordinate\r\n\t *\r\n\t * @param {number} x relative coordinate\r\n\t */\r\n\r\n  getX(x: number) {\r\n    return this.leftOffset + x * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n\t * Get absolute Y coordinate\r\n\t *\r\n\t * @param {number} y relative coordinate\r\n\t */\r\n\r\n  getY(y: number) {\r\n    return this.topOffset + y * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n   * Sets width of the board, height will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   */\r\n  setWidth(width: number) {\r\n    this.config.width = width;\r\n    this.config.height = 0;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets height of the board, width will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param height\r\n   */\r\n  setHeight(height: number) {\r\n    this.config.width = 0;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets exact dimensions of the board. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   * @param height\r\n   */\r\n  setDimensions(width: number, height: number) {\r\n    this.config.width = width;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n\t * Get currently visible section of the board\r\n\t */\r\n\r\n  getViewport() {\r\n    return this.config.viewport;\r\n  }\r\n\r\n  /**\r\n\t * Set section of the board to be displayed\r\n\t */\r\n\r\n  setViewport(viewport: BoardViewport) {\r\n    this.config.viewport = viewport;\r\n    this.resize();\r\n  }\r\n\r\n  getSize() {\r\n    return this.config.size;\r\n  }\r\n\r\n  setSize(size: number = 19) {\r\n    if (size !== this.config.size) {\r\n      this.config.size = size;\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  getCoordinates() {\r\n    return this.config.coordinates;\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    if (this.config.coordinates !== coordinates) {\r\n      this.config.coordinates = coordinates;\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    if (!this.redrawScheduled) {\r\n      this.redrawScheduled = true;\r\n\r\n      window.requestAnimationFrame(() => {\r\n        this.redrawScheduled = false;\r\n\r\n        // set correct background\r\n        this.boardElement.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n        if (this.config.theme.backgroundImage) {\r\n          this.boardElement.style.backgroundImage = `url(\"${this.config.theme.backgroundImage}\")`;\r\n        }\r\n\r\n        // redraw all layers\r\n        Object.keys(this.layers).forEach((layer) => {\r\n          this.redrawLayer(layer);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Redraw just one layer. Use in special cases, when you know, that only that layer needs to be redrawn.\r\n\t * For complete redrawing use method redraw().\r\n\t */\r\n  redrawLayer(layer: string) {\r\n    this.layers[layer].clear();\r\n\r\n    this.objects.forEach((boardObject) => {\r\n      this.layers[layer].draw(boardObject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add board object. Main function for adding graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.addObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.objects.push(boardObject);\r\n    this.redraw();\r\n  }\r\n\r\n  /**\r\n   * Shortcut method to add object and set its position.\r\n   */\r\n  addObjectAt(x: number, y: number, boardObject: BoardObject) {\r\n    boardObject.setPosition(x, y);\r\n    this.addObject(boardObject);\r\n  }\r\n\r\n  /**\r\n   * Remove board object. Main function for removing graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.removeObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const objectPos = this.objects.indexOf(boardObject);\r\n\r\n    if (objectPos === -1) {\r\n      // object isn't on the board, ignore it\r\n      return;\r\n    }\r\n\r\n    this.objects.splice(objectPos, 1);\r\n    this.redraw();\r\n  }\r\n\r\n  removeObjectsAt(x: number, y: number) {\r\n    this.objects.forEach((obj) => {\r\n      if (obj.x === x && obj.y === y) {\r\n        this.removeObject(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  removeAllObjects() {\r\n    this.objects = [];\r\n    this.redraw();\r\n  }\r\n\r\n  on(type: string, callback: (event: UIEvent, point: Point) => void) {\r\n    super.on(type, callback);\r\n    this.registerBoardListener(type);\r\n  }\r\n\r\n  registerBoardListener(type: string) {\r\n    this.boardElement.addEventListener(type, (evt) => {\r\n      if ((evt as any).layerX != null) {\r\n        const pos = this.getRelativeCoordinates((evt as any).layerX, (evt as any).layerY);\r\n        this.emit(type, evt, pos);\r\n      } else {\r\n        this.emit(type, evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRelativeCoordinates(absoluteX: number, absoluteY: number) {\r\n    // new hopefully better translation of coordinates\r\n\r\n    const x = Math.round((absoluteX * this.pixelRatio - this.leftOffset) / this.fieldSize);\r\n    const y = Math.round((absoluteY * this.pixelRatio - this.topOffset) / this.fieldSize);\r\n\r\n    if (x < 0 || x >= this.config.size || y < 0 || y >= this.config.size) {\r\n      return null;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n\r\n  /*\r\n  off(type, callback) {\r\n    for (let i = 0; i < this.listeners.length; i++) {\r\n      const listener = this.listeners[i];\r\n      if (listener.type === type && listener.callback === callback) {\r\n        this.element.removeEventListener(listener.type, listener, true);\r\n        this.listeners.splice(i, 1);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }*/\r\n}\r\n","/**\r\n * WGo's game engine offers to set 3 rules:\r\n *\r\n * - *checkRepeat* - one of `repeat.KO`, `repeat.ALL`, `repeat.NONE` - defines if or when a move can be repeated.\r\n * - *allowRewrite* - if set true a move can rewrite existing move (for uncommon applications)\r\n * - *allowSuicide* - if set true a suicide will be allowed (and stone will be immediately captured)\r\n *\r\n * In this module there are some common preset rule sets (Japanese, Chinese etc...).\r\n * Extend object `gameRules` if you wish to add some rule set. Names of the rules should correspond with\r\n * SGF `RU` property.\r\n */\r\n\r\nexport enum Repeating {\r\n  KO = 'KO',\r\n  ALL = 'ALL',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface GoRules {\r\n  repeating: Repeating;\r\n  allowRewrite: boolean;\r\n  allowSuicide: boolean;\r\n  komi: number;\r\n}\r\n\r\nexport const JAPANESE_RULES: GoRules = {\r\n  repeating: Repeating.KO,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 6.5,\r\n};\r\n\r\nexport const CHINESE_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const ING_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: true,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const NO_RULES: GoRules = {\r\n  repeating: Repeating.ALL,\r\n  allowRewrite: true,\r\n  allowSuicide: true,\r\n  komi: 0,\r\n};\r\n\r\nexport default {\r\n  Japanese: JAPANESE_RULES,\r\n  GOE: ING_RULES,\r\n  NZ: ING_RULES,\r\n  AGA: CHINESE_RULES,\r\n  Chinese: CHINESE_RULES,\r\n};\r\n","/**\r\n * Enumeration representing stone color, can be used for representing board position.\r\n */\r\nexport enum Color {\r\n  BLACK = 1,\r\n  B = 1,\r\n  WHITE = -1,\r\n  W = -1,\r\n  EMPTY = 0,\r\n  E = 0,\r\n}\r\n\r\n/**\r\n * Simple 2 dimensional vector for referencing field on the board.\r\n */\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface LineSegment {\r\n  point1: Point;\r\n  point2: Point;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface Field extends Point {\r\n  c: Color;\r\n}\r\n\r\nexport interface Move extends Point {\r\n  c: Color.BLACK | Color.WHITE;\r\n}\r\n","/**\r\n * Contains implementation of go position class.\r\n * @module Position\r\n */\r\n\r\nimport { Color, Field } from '../types';\r\n\r\n// creates 2-dim array\r\nfunction createGrid<T>(size: number) {\r\n  const grid: T[][] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    grid.push([]);\r\n  }\r\n  return grid;\r\n}\r\n\r\n/**\r\n * Position class represents a state of the go game in one moment in time. It is composed from a grid containing black\r\n * and white stones, capture counts, and actual turn. It is designed to be mutable.\r\n */\r\nexport default class Position {\r\n  /**\r\n\t * Size of the board.\r\n\t * @constant\r\n\t */\r\n\r\n  size: number;\r\n\r\n  /**\r\n   * One dimensional array containing stones of the position.\r\n   */\r\n  grid: Color[] = [];\r\n\r\n  /**\r\n   * Contains numbers of stones that both players captured.\r\n   *\r\n   * @property {number} black - Count of white stones captured by **black**.\r\n   * @property {number} white - Count of black stones captured by **white**.\r\n   */\r\n\r\n  capCount = {\r\n    black: 0,\r\n    white: 0,\r\n  };\r\n\r\n  /**\r\n   * Who plays next move.\r\n   */\r\n\r\n  turn: Color.BLACK | Color.WHITE = Color.BLACK;\r\n\r\n  /**\r\n   * Creates instance of position object.\r\n   *\r\n   * @alias WGo.Position\r\n   * @class\r\n   *\r\n   * @param {number} [size = 19] - Size of the board.\r\n   */\r\n  constructor(size: number = 19) {\r\n    this.size = size;\r\n\r\n    // init grid\r\n    this.clear();\r\n  }\r\n\r\n  isOnPosition(x: number, y: number) {\r\n    return x >= 0 && y >= 0 && x < this.size && y < this.size;\r\n  }\r\n\r\n  /**\r\n   * Returns stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @return {Color} Color\r\n   */\r\n  get(x: number, y: number): Color {\r\n    if (!this.isOnPosition(x, y)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.grid[x * this.size + y];\r\n  }\r\n\r\n  /**\r\n   * Sets stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {Color} c - Color\r\n   */\r\n  set(x: number, y: number, c: Color) {\r\n    if (!this.isOnPosition(x, y)) {\r\n      throw new TypeError('Attempt to set field outside of position.');\r\n    }\r\n\r\n    this.grid[x * this.size + y] = c;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the whole position (every value is set to EMPTY).\r\n   */\r\n  clear() {\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      this.grid[i] = Color.EMPTY;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones the whole position.\r\n   *\r\n   * @return {WGo.Position} Copy of the position.\r\n   * @todo Clone turn as well.\r\n   */\r\n\r\n  clone(): Position {\r\n    const clone = new Position(this.size);\r\n    clone.grid = this.grid.slice(0);\r\n    clone.capCount.black = this.capCount.black;\r\n    clone.capCount.white = this.capCount.white;\r\n    clone.turn = this.turn;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Compares this position with another position and return object with changes\r\n   *\r\n   * @param {WGo.Position} position - Position to compare to.\r\n   * @return {Field[]} Array of different fields\r\n   */\r\n\r\n  compare(position: Position): Field[] {\r\n    if (position.size !== this.size) {\r\n      throw new TypeError('Positions of different sizes cannot be compared.');\r\n    }\r\n\r\n    const diff: Field[] = [];\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      if (this.grid[i] !== position.grid[i]) {\r\n        diff.push({\r\n          x: Math.floor(i / this.size),\r\n          y: i % this.size,\r\n          c: position.grid[i],\r\n        });\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Sets stone on given coordinates and capture adjacent stones without liberties if there are any.\r\n   * If move is invalid, false is returned.\r\n   */\r\n  applyMove(x: number, y: number, c: Color = this.turn, allowSuicide = false, allowRewrite = false) {\r\n    // check if move is on empty field of the board\r\n    if (!(allowRewrite || this.get(x, y) === Color.EMPTY)) {\r\n      return false;\r\n    }\r\n\r\n    // clone position and add a stone\r\n    const prevColor = this.get(x, y);\r\n    this.set(x, y, c);\r\n\r\n    // check capturing of all surrounding stones\r\n    const capturesAbove = this.get(x, y - 1) === -c && this.captureIfNoLiberties(x, y - 1);\r\n    const capturesRight = this.get(x + 1, y) === -c && this.captureIfNoLiberties(x + 1, y);\r\n    const capturesBelow = this.get(x, y + 1) === -c && this.captureIfNoLiberties(x, y + 1);\r\n    const capturesLeft = this.get(x - 1, y) === -c && this.captureIfNoLiberties(x - 1, y);\r\n    const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n    // check suicide\r\n    if (!hasCaptured) {\r\n      if (!this.hasLiberties(x, y)) {\r\n        if (allowSuicide) {\r\n          this.capture(x, y, c);\r\n        } else {\r\n          // revert position\r\n          this.set(x, y, prevColor);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.turn = -c;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n   * that should be captured, they will be removed. Returns a new Position object.\r\n   * This position isn't modified.\r\n   */\r\n\r\n  validatePosition() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        this.captureIfNoLiberties(x - 1, y);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if stone or group on the given coordinates has at least one liberty.\r\n   */\r\n  hasLiberties(x: number, y: number, alreadyTested = createGrid(this.size), c = this.get(x, y)): boolean {\r\n    // out of the board there aren't liberties\r\n    if (!this.isOnPosition(x, y)) {\r\n      return false;\r\n    }\r\n\r\n    // however empty field means liberty\r\n    if (this.get(x, y) === Color.EMPTY) {\r\n      return true;\r\n    }\r\n\r\n    // already tested field or stone of enemy isn't a liberty.\r\n    if (alreadyTested[x][y] || this.get(x, y) === -c) {\r\n      return false;\r\n    }\r\n\r\n    // set this field as tested\r\n    alreadyTested[x][y] = true;\r\n\r\n    // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n    return (\r\n      this.hasLiberties(x, y - 1, alreadyTested, c) ||\r\n      this.hasLiberties(x, y + 1, alreadyTested, c) ||\r\n      this.hasLiberties(x - 1, y, alreadyTested, c) ||\r\n      this.hasLiberties(x + 1, y, alreadyTested, c)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if specified stone/group has zero liberties and if so it captures/removes stones from the position.\r\n   */\r\n  protected captureIfNoLiberties(x: number, y: number) {\r\n    // if it has zero liberties capture it\r\n    if (!this.hasLiberties(x, y)) {\r\n      // capture stones from game\r\n      this.capture(x, y);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n   */\r\n  capture(x: number, y: number, c: Color = this.get(x, y)) {\r\n    if (this.isOnPosition(x, y) && c !== Color.EMPTY && this.get(x, y) === c) {\r\n      this.set(x, y, Color.EMPTY);\r\n\r\n      if (c === Color.BLACK) {\r\n        this.capCount.white = this.capCount.white + 1;\r\n      } else {\r\n        this.capCount.black = this.capCount.black + 1;\r\n      }\r\n\r\n      this.capture(x, y - 1, c);\r\n      this.capture(x, y + 1, c);\r\n      this.capture(x - 1, y, c);\r\n      this.capture(x + 1, y, c);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For debug purposes.\r\n   */\r\n  toString() {\r\n    const TL = '┌';\r\n    const TM = '┬';\r\n    const TR = '┐';\r\n    const ML = '├';\r\n    const MM = '┼';\r\n    const MR = '┤';\r\n    const BL = '└';\r\n    const BM = '┴';\r\n    const BR = '┘';\r\n    const BS = '●';\r\n    const WS = '○';\r\n    const HF = '─'; // horizontal fill\r\n\r\n    let output = '   ';\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      output += i < 9 ? `${i} ` : i;\r\n    }\r\n\r\n    output += '\\n';\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        const color = this.grid[x * this.size + y];\r\n\r\n        if (x === 0) {\r\n          output += `${(y < 10 ? ` ${y}` : y)} `;\r\n        }\r\n\r\n        if (color !== Color.EMPTY) {\r\n          output += color === Color.BLACK ? BS : WS;\r\n        } else {\r\n          let char;\r\n\r\n          if (y === 0) {\r\n            // top line\r\n            if (x === 0) {\r\n              char = TL;\r\n            } else if (x < this.size - 1) {\r\n              char = TM;\r\n            } else {\r\n              char = TR;\r\n            }\r\n          } else if (y < this.size - 1) {\r\n            // middle line\r\n            if (x === 0) {\r\n              char = ML;\r\n            } else if (x < this.size - 1) {\r\n              char = MM;\r\n            } else {\r\n              char = MR;\r\n            }\r\n          } else {\r\n            // bottom line\r\n            if (x === 0) {\r\n              char = BL;\r\n            } else if (x < this.size - 1) {\r\n              char = BM;\r\n            } else {\r\n              char = BR;\r\n            }\r\n          }\r\n\r\n          output += char;\r\n        }\r\n\r\n        if (x === this.size - 1) {\r\n          if (y !== this.size - 1) {\r\n            output += '\\n';\r\n          }\r\n        } else {\r\n          output += HF;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns position grid as two dimensional array.\r\n   */\r\n  toTwoDimensionalArray() {\r\n    const arr: Color[][] = [];\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      arr[x] = [];\r\n      for (let y = 0; y < this.size; y++) {\r\n        arr[x][y] = this.grid[x * this.size + y];\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n\r\n// import { Color, Field, Move } from '../types';\r\n\r\n// /**\r\n//  * Position of the board (grid) is represented as 2 dimensional array of colors.\r\n//  */\r\n// export type Position = Color[][];\r\n\r\n// /**\r\n//  * Creates empty position (filled with Color.EMPTY) of specified size.\r\n//  * @param size\r\n//  */\r\n// export function createPosition(size: number) {\r\n//   const position: Color[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     const row: Color[] = [];\r\n//     for (let j = 0; j < size; j++) {\r\n//       row.push(Color.EMPTY);\r\n//     }\r\n//     position.push(row);\r\n//   }\r\n//   return position;\r\n// }\r\n\r\n// /**\r\n//  * Deep clones a position.\r\n//  * @param position\r\n//  */\r\n// export function clonePosition(position: Position) {\r\n//   return position.map(row => row.slice(0));\r\n// }\r\n\r\n// /**\r\n//  * Compares position `pos1` with position `pos2` and returns all differences on `pos2`.\r\n//  * @param pos1\r\n//  * @param pos2\r\n//  */\r\n// export function comparePositions(pos1: Position, pos2: Position): Field[] {\r\n//   if (pos1.length !== pos2.length) {\r\n//     throw new TypeError('Positions of different sizes cannot be compared.');\r\n//   }\r\n\r\n//   const diff: Field[] = [];\r\n\r\n//   for (let x = 0; x < pos1.length; x++) {\r\n//     for (let y = 0; y < pos2.length; y++) {\r\n//       if (pos1[x][y] !== pos2[x][y]) {\r\n//         diff.push({ x, y, c: pos2[x][y] });\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return diff;\r\n// }\r\n\r\n// function isOnBoard(position: Position, x: number, y: number) {\r\n//   return x >= 0 && x < position.length && y >= 0 && y < position.length;\r\n// }\r\n\r\n// /**\r\n//  * Creates new position with specified move (with rules applied - position won't contain captured stones).\r\n//  * If move is invalid, null is returned.\r\n//  */\r\n// export function applyMove(position: Position, x: number, y: number, c: Color.B | Color.W, allowSuicide = false) {\r\n//   // check if move is on empty field of the board\r\n//   if (!isOnBoard(position, x, y) || position[x][y] !== Color.EMPTY) {\r\n//     return null;\r\n//   }\r\n\r\n//   // clone position and add a stone\r\n//   const newPosition = clonePosition(position);\r\n//   newPosition[x][y] = c;\r\n\r\n//   // check capturing of all surrounding stones\r\n//   const capturesAbove = captureIfNoLiberties(newPosition, x, y - 1, -c);\r\n//   const capturesRight = captureIfNoLiberties(newPosition, x + 1, y, -c);\r\n//   const capturesBelow = captureIfNoLiberties(newPosition, x, y + 1, -c);\r\n//   const capturesLeft = captureIfNoLiberties(newPosition, x - 1, y, -c);\r\n//   const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n//   // check suicide\r\n//   if (!hasCaptured) {\r\n//     if (!hasLiberties(newPosition, x, y)) {\r\n//       if (allowSuicide) {\r\n//         capture(newPosition, x, y, c);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n//  * that should be captured, they will be removed. Returns a new Position object.\r\n//  */\r\n\r\n// export function getValidatedPosition(position: Position) {\r\n//   const newPosition = clonePosition(position);\r\n\r\n//   for (let x = 0; x < position.length; x++) {\r\n//     for (let y = 0; y < position.length; y++) {\r\n//       captureIfNoLiberties(newPosition, x, y);\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Capture stone or group of stones if they are zero liberties. Mutates the given position.\r\n//  *\r\n//  * @param position\r\n//  * @param x\r\n//  * @param y\r\n//  * @param c\r\n//  */\r\n// function captureIfNoLiberties(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   let hasCaptured = false;\r\n\r\n//   // is there a stone possible to capture?\r\n//   if (isOnBoard(position, x, y) && c !== Color.EMPTY && position[x][y] === c) {\r\n//     // if it has zero liberties capture it\r\n//     if (!hasLiberties(position, x, y)) {\r\n//       // capture stones from game\r\n//       capture(position, x, y, c);\r\n//       hasCaptured = true;\r\n//     }\r\n//   }\r\n\r\n//   return hasCaptured;\r\n// }\r\n\r\n// function createTestGrid(size: number) {\r\n//   const grid: boolean[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     grid.push([]);\r\n//   }\r\n//   return grid;\r\n// }\r\n\r\n// /**\r\n//  * Returns true if stone or group on the given position has at least one liberty.\r\n//  */\r\n// function hasLiberties(\r\n//   position: Position,\r\n//   x: number,\r\n//   y: number,\r\n//   alreadyTested = createTestGrid(position.length),\r\n//   c = position[x][y],\r\n// ): boolean {\r\n//   // out of the board there aren't liberties\r\n//   if (!isOnBoard(position, x, y)) {\r\n//     return false;\r\n//   }\r\n\r\n//   // however empty field means liberty\r\n//   if (position[x][y] === Color.EMPTY) {\r\n//     return true;\r\n//   }\r\n\r\n//   // already tested field or stone of enemy isn't a liberty.\r\n//   if (alreadyTested[x][y] || position[x][y] === -c) {\r\n//     return false;\r\n//   }\r\n\r\n//   // set this field as tested\r\n//   alreadyTested[x][y] = true;\r\n\r\n//   // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n//   return (\r\n//     hasLiberties(position, x, y - 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x, y + 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x - 1, y, alreadyTested, c) ||\r\n//     hasLiberties(position, x + 1, y, alreadyTested, c)\r\n//   );\r\n// }\r\n\r\n// /**\r\n//  * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n//  * Mutates the given position.\r\n//  */\r\n// function capture(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   if (isOnBoard(position, x, y) && position[x][y] !== Color.EMPTY && position[x][y] === c) {\r\n//     position[x][y] = Color.EMPTY;\r\n\r\n//     capture(position, x, y - 1, c);\r\n//     capture(position, x, y + 1, c);\r\n//     capture(position, x - 1, y, c);\r\n//     capture(position, x + 1, y, c);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * For debug purposes.\r\n//  */\r\n// export function stringifyPosition(position: Position) {\r\n//   const TL = '┌';\r\n//   const TM = '┬';\r\n//   const TR = '┐';\r\n//   const ML = '├';\r\n//   const MM = '┼';\r\n//   const MR = '┤';\r\n//   const BL = '└';\r\n//   const BM = '┴';\r\n//   const BR = '┘';\r\n//   const BS = '●';\r\n//   const WS = '○';\r\n//   const HF = '─'; // horizontal fill\r\n\r\n//   let output = '   ';\r\n\r\n//   for (let i = 0; i < position.length; i++) {\r\n//     output += i < 9 ? `${i} ` : i;\r\n//   }\r\n\r\n//   output += '\\n';\r\n\r\n//   for (let y = 0; y < position.length; y++) {\r\n//     for (let x = 0; x < position.length; x++) {\r\n//       const color = position[x][y];\r\n\r\n//       if (x === 0) {\r\n//         output += `${(y < 10 ? ` ${y}` : y)} `;\r\n//       }\r\n\r\n//       if (color !== Color.EMPTY) {\r\n//         output += color === Color.BLACK ? BS : WS;\r\n//       } else {\r\n//         let char;\r\n\r\n//         if (y === 0) {\r\n//           // top line\r\n//           if (x === 0) {\r\n//             char = TL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = TM;\r\n//           } else {\r\n//             char = TR;\r\n//           }\r\n//         } else if (y < position.length - 1) {\r\n//           // middle line\r\n//           if (x === 0) {\r\n//             char = ML;\r\n//           } else if (x < position.length - 1) {\r\n//             char = MM;\r\n//           } else {\r\n//             char = MR;\r\n//           }\r\n//         } else {\r\n//           // bottom line\r\n//           if (x === 0) {\r\n//             char = BL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = BM;\r\n//           } else {\r\n//             char = BR;\r\n//           }\r\n//         }\r\n\r\n//         output += char;\r\n//       }\r\n\r\n//       if (x === position.length - 1) {\r\n//         if (y !== position.length - 1) {\r\n//           output += '\\n';\r\n//         }\r\n//       } else {\r\n//         output += HF;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return output;\r\n// }\r\n","import { GoRules, JAPANESE_RULES, Repeating } from './rules';\r\nimport Position from './Position';\r\nimport { Color } from '../types';\r\n\r\nexport default class Game {\r\n  size: number;\r\n  rules: GoRules;\r\n  komi: number;\r\n  positionStack: Position[];\r\n\r\n  /**\r\n   * Creates instance of game class.\r\n   *\r\n   * @class\r\n   * This class implements game logic. It basically analyses given moves and returns capture stones.\r\n   * WGo.Game also stores every position from beginning, so it has ability to check repeating positions\r\n   * and it can effectively restore old positions.\r\n   *\r\n   *\r\n   * @param {number} [size = 19] Size of the board\r\n   * @param {string} [checkRepeat = KO] How to handle repeated position:\r\n   *\r\n   * * KO - ko is properly handled - position cannot be same like previous position\r\n   * * ALL - position cannot be same like any previous position - e.g. it forbids triple ko\r\n   * * NONE - position can be repeated\r\n   *\r\n   * @param {boolean} [allowRewrite = false] Allow to play moves, which were already played\r\n   * @param {boolean} [allowSuicide = false] Allow to play suicides, stones are immediately captured\r\n   */\r\n\r\n  constructor(size: number = 19, rules: GoRules = JAPANESE_RULES) {\r\n    this.size = size;\r\n    this.rules = rules;\r\n    this.komi = rules.komi;\r\n    this.positionStack = [new Position(size)];\r\n  }\r\n\r\n  get position() {\r\n    return this.positionStack[this.positionStack.length - 1];\r\n  }\r\n\r\n  set position(pos) {\r\n    this.positionStack[this.positionStack.length - 1] = pos;\r\n  }\r\n\r\n  get turn() {\r\n    return this.position.turn;\r\n  }\r\n\r\n  set turn(color: Color.WHITE | Color.BLACK) {\r\n    this.position.turn = color;\r\n  }\r\n\r\n  get capCount() {\r\n    return this.position.capCount;\r\n  }\r\n\r\n  /**\r\n   * Play move. You can specify color.\r\n   */\r\n  play(x: number, y: number) {\r\n    const nextPosition = this.tryToPlay(x, y);\r\n\r\n    if (nextPosition) {\r\n      this.pushPosition(nextPosition);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Tries to play on given coordinates, returns new position after the play, or error code.\r\n   */\r\n  protected tryToPlay(x: number, y: number) {\r\n    const nextPosition = this.position.clone();\r\n    const success = nextPosition.applyMove(x, y, nextPosition.turn, this.rules.allowSuicide, this.rules.allowRewrite);\r\n\r\n    if (success && !this.hasPositionRepeated(nextPosition)) {\r\n      return nextPosition;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Position} position to check\r\n   * @return {boolean} Returns true if the position didn't occurred in the past (according to the rule set)\r\n   */\r\n  hasPositionRepeated(position: Position): boolean {\r\n    let depth: number;\r\n\r\n    if (this.rules.repeating === Repeating.KO && this.positionStack.length - 2 >= 0) {\r\n      depth = this.positionStack.length - 2;\r\n    } else if (this.rules.repeating === Repeating.NONE) {\r\n      depth = 0;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    for (let i = this.positionStack.length - 1; i >= depth; i--) {\r\n      if (this.positionStack[i].compare(position).length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Play pass.\r\n   *\r\n   * @param {(BLACK|WHITE)} c color\r\n   */\r\n\r\n  pass(c: Color.BLACK | Color.WHITE = this.turn) {\r\n    const nextPosition = this.position.clone();\r\n    nextPosition.turn = -(c || this.turn);\r\n    this.pushPosition(nextPosition);\r\n  }\r\n\r\n  /**\r\n   * Finds out validity of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move can be played.\r\n   */\r\n\r\n  isValid(x: number, y: number): boolean {\r\n    return !!this.tryToPlay(x, y);\r\n  }\r\n\r\n  /**\r\n   * Controls position of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move is on board.\r\n   */\r\n\r\n  isOnBoard(x: number, y: number): boolean {\r\n    return this.position.isOnPosition(x, y);\r\n  }\r\n\r\n  /**\r\n   * Inserts move into current position. Use for setting position, for example in handicap game. Field must be empty.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {Color} c color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  addStone(x: number, y: number, c: Color.BLACK | Color.WHITE): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) === Color.EMPTY) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes move from current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  removeStone(x: number, y: number): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) !== Color.EMPTY) {\r\n      this.position.set(x, y, Color.EMPTY);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set or insert move of current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {(BLACK|WHITE)} [c] color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  setStone(x: number, y: number, c: Color): boolean {\r\n    if (this.isOnBoard(x, y)) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get stone on given position.s\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {(Color|null)} color\r\n   */\r\n\r\n  getStone(x: any, y: any): (Color | null) {\r\n    return this.position.get(x, y);\r\n  }\r\n\r\n  /**\r\n   * Add position to stack. If position isn't specified current position is cloned and stacked.\r\n   * Pointer of actual position is moved to the new position.\r\n   *\r\n   * @param {WGo.Position} tmp position (optional)\r\n   */\r\n\r\n  pushPosition(pos: Position) {\r\n    return this.positionStack.push(pos);\r\n  }\r\n\r\n  /**\r\n   * Remove current position from stack. Pointer of actual position is moved to the previous position.\r\n   */\r\n\r\n  popPosition() {\r\n    if (this.positionStack.length > 1) {\r\n      return this.positionStack.pop();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes all positions except the initial.\r\n   */\r\n\r\n  clear() {\r\n    this.positionStack = [this.positionStack[0]];\r\n  }\r\n}\r\n","import { defaultBoardConfig } from '../CanvasBoard';\r\nimport { PlayerConfig } from './types';\r\n\r\nconst playerDefaultConfig: PlayerConfig = {\r\n  boardTheme: defaultBoardConfig.theme,\r\n  sgf: null,\r\n};\r\n\r\nexport default playerDefaultConfig;\r\n","/**\r\n * From SGF specification, there are these types of property values:\r\n *\r\n * CValueType = (ValueType | *Compose*)\r\n * ValueType  = (*None* | *Number* | *Real* | *Double* | *Color* | *SimpleText* | *Text* | *Point*  | *Move* | *Stone*)\r\n *\r\n * WGo's kifu node (KNode object) implements similar types with few exceptions:\r\n *\r\n * - Types `Number`, `Real` and `Double` are implemented by javascript's `number`.\r\n * - Types `SimpleText` and `Text` are considered as the same.\r\n * - Types `Point`, `Move` and `Stone` are all the same, implemented as simple object with `x` and `y` coordinates.\r\n * - Type `None` is implemented as `true`\r\n *\r\n * Each `Compose` type, which is used in SGF, has its own type.\r\n *\r\n * - `Point ':' Point` (used in AR property) has special type `Line` - object with two sets of coordinates.\r\n * - `Point ':' Simpletext` (used in LB property) has special type `Label` - object with coordinates and text property\r\n * - `Simpletext \":\" Simpletext` (used in AP property) - not implemented\r\n * - `Number \":\" SimpleText` (used in FG property) - not implemented\r\n *\r\n * Moreover each property value has these settings:\r\n *\r\n * - *Single value* / *Array* (more values)\r\n * - *Not empty* / *Empty* (value or array can be empty)\r\n *\r\n * {@link http://www.red-bean.com/sgf/sgf4.html}\r\n */\r\n\r\nimport { Color, Point, Label, LineSegment } from '../types';\r\n\r\ninterface PropertyValueTransformer<T = any> {\r\n  read(str: string): T;\r\n  write(value: T): string;\r\n}\r\n\r\nexport const NONE = {\r\n  read: (str: string) => true,\r\n  write: (value: boolean) => '',\r\n};\r\n\r\nexport const NUMBER = {\r\n  read: (str: string) => parseFloat(str),\r\n  write: (value: number) => value.toString(10),\r\n};\r\n\r\nexport const TEXT = {\r\n  read: (str: string) => str,\r\n  write: (value: string) => value,\r\n};\r\n\r\nexport const COLOR = {\r\n  read: (str: string) => (str === 'w' || str === 'W' ? Color.WHITE : Color.BLACK),\r\n  write: (value: Color) => (value === Color.WHITE ? 'W' : 'B'),\r\n};\r\n\r\nexport const POINT = {\r\n  read: (str: string): Point => str ? {\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n  } : null,\r\n  write: (value?: Point) => value ? String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97) : '',\r\n};\r\n\r\nexport const LABEL = {\r\n  read: (str: string): Label => ({\r\n    x: str.charCodeAt(0) - 97,\r\n    y: str.charCodeAt(1) - 97,\r\n    text: str.substr(3),\r\n  }),\r\n  write: (value: Label) => (\r\n    `${String.fromCharCode(value.x + 97) + String.fromCharCode(value.y + 97)}:${value.text}`\r\n  ),\r\n};\r\n\r\nexport const LINE_SEGMENT = {\r\n  read: (str: string): LineSegment => ({\r\n    point1: {\r\n      x: str.charCodeAt(0) - 97,\r\n      y: str.charCodeAt(1) - 97,\r\n    },\r\n    point2: {\r\n      x: str.charCodeAt(3) - 97,\r\n      y: str.charCodeAt(4) - 97,\r\n    },\r\n  }),\r\n  write: (value: LineSegment) => (\r\n    // tslint:disable-next-line:max-line-length\r\n    `${String.fromCharCode(value.point1.x + 97) + String.fromCharCode(value.point1.y + 97)}:${String.fromCharCode(value.point2.x + 97) + String.fromCharCode(value.point2.y + 97)}`\r\n  ),\r\n};\r\n\r\n/// Property definitions --------------------------------------------------------------------------\r\n\r\ninterface PropertyValueDefinition<T> {\r\n  transformer: PropertyValueTransformer<T>;\r\n  multiple: boolean;\r\n  notEmpty: boolean;\r\n}\r\n\r\nconst propertyValueTypes: {[propIdent: string]: PropertyValueDefinition<any>} = {\r\n  _default: {\r\n    transformer: TEXT,\r\n    multiple: false,\r\n    notEmpty: true,\r\n  },\r\n};\r\n\r\n/// Move properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.B = propertyValueTypes.W = {\r\n  transformer: POINT,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.KO = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\npropertyValueTypes.MN = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Setup properties ------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AB = propertyValueTypes.AW = propertyValueTypes.AE = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.PL = {\r\n  transformer: COLOR,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Node annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.C = propertyValueTypes.N = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.DM = propertyValueTypes.GB = propertyValueTypes.GW = propertyValueTypes.HO = propertyValueTypes.UC = propertyValueTypes.V = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Move annotation properties --------------------------------------------------------------------\r\n\r\npropertyValueTypes.BM = propertyValueTypes.TE = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DO = propertyValueTypes.IT = {\r\n  transformer: NONE,\r\n  multiple: false,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Markup properties -----------------------------------------------------------------------------\r\n\r\n// tslint:disable-next-line:max-line-length\r\npropertyValueTypes.CR = propertyValueTypes.MA = propertyValueTypes.SL = propertyValueTypes.SQ = propertyValueTypes.TR = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.LB = {\r\n  transformer: LABEL,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.AR = propertyValueTypes.LN = {\r\n  transformer: LINE_SEGMENT,\r\n  multiple: true,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.DD = propertyValueTypes.TB = propertyValueTypes.TW = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: false,\r\n};\r\n\r\n/// Root properties -------------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AP = propertyValueTypes.CA = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n// note: rectangular board is not implemented (in SZ property)\r\npropertyValueTypes.FF = propertyValueTypes.GM = propertyValueTypes.ST = propertyValueTypes.SZ = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Game info properties --------------------------------------------------------------------------\r\n\r\npropertyValueTypes.AN = propertyValueTypes.BR = propertyValueTypes.BT =\r\npropertyValueTypes.CP = propertyValueTypes.DT = propertyValueTypes.EV =\r\npropertyValueTypes.GN = propertyValueTypes.GC = propertyValueTypes.GN =\r\npropertyValueTypes.ON = propertyValueTypes.OT = propertyValueTypes.PB =\r\npropertyValueTypes.PC = propertyValueTypes.PW = propertyValueTypes.RE =\r\npropertyValueTypes.RO = propertyValueTypes.RU = propertyValueTypes.SO =\r\npropertyValueTypes.US = propertyValueTypes.WR = propertyValueTypes.WT = {\r\n  transformer: TEXT,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.TM = propertyValueTypes.HA = propertyValueTypes.KM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Timing properties -----------------------------------------------------------------------------\r\n\r\npropertyValueTypes.BL = propertyValueTypes.WL = propertyValueTypes.OB = propertyValueTypes.OW = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\n/// Miscellaneous properties ----------------------------------------------------------------------\r\n\r\npropertyValueTypes.PM = {\r\n  transformer: NUMBER,\r\n  multiple: false,\r\n  notEmpty: true,\r\n};\r\n\r\npropertyValueTypes.VW = {\r\n  transformer: POINT,\r\n  multiple: true,\r\n  notEmpty: false,\r\n};\r\n\r\nexport default propertyValueTypes;\r\n","import SGFParser, { SGFSyntaxError } from '../SGFParser';\r\nimport propertyValueTypes from './propertyValueTypes';\r\nimport { SGFGameTree, SGFProperties } from '../SGFParser/sgfTypes';\r\n\r\nconst processJSGF = function (gameTree: SGFGameTree) {\r\n  const rootNode = new KifuNode();\r\n  rootNode.setSGFProperties(gameTree.sequence[0] || {});\r\n\r\n  let lastNode = rootNode;\r\n\r\n  for (let i = 1; i < gameTree.sequence.length; i++) {\r\n    const node = new KifuNode();\r\n    node.setSGFProperties(gameTree.sequence[i]);\r\n    lastNode.appendChild(node);\r\n    lastNode = node;\r\n  }\r\n\r\n  for (let i = 0; i < gameTree.children.length; i++) {\r\n    lastNode.appendChild(processJSGF(gameTree.children[i]));\r\n  }\r\n\r\n  return rootNode;\r\n};\r\n\r\n/**\r\n * Contains path to certain node in game tree.\r\n */\r\nexport interface Path {\r\n  /** Depth of node (for root node it is 0) */\r\n  depth: number;\r\n  /** Array of children array indexes of all predecessors which have siblings. */\r\n  forks: number[];\r\n}\r\n\r\n/**\r\n * Class representing one kifu node.\r\n */\r\nexport default class KifuNode {\r\n  parent: KifuNode | null;\r\n  children: KifuNode[];\r\n  properties: {[key: string]: any};\r\n\r\n  constructor() {\r\n    this.parent = null;\r\n    this.children = [];\r\n    this.properties = {};\r\n  }\r\n\r\n  get root() {\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent != null) {\r\n      node = node.parent;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /*set innerSGF(sgf: string) {\r\n    this.setFromSGF(sgf);\r\n  }*/\r\n\r\n  get innerSGF(): string {\r\n    let output = ';';\r\n\r\n    for (const propIdent in this.properties) {\r\n      if (this.properties.hasOwnProperty(propIdent)) {\r\n        output += propIdent + this.getSGFProperty(propIdent);\r\n      }\r\n    }\r\n\r\n    if (this.children.length === 1) {\r\n      return `${output};${this.children[0].innerSGF}`;\r\n    }\r\n    if (this.children.length > 1) {\r\n      return this.children.reduce((prev, current) => `${prev}(;${current.innerSGF})`, output);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getPath() {\r\n    const path: Path = { depth: 0, forks: [] };\r\n    // tslint:disable-next-line:no-this-assignment\r\n    let node: KifuNode = this;\r\n\r\n    while (node.parent) {\r\n      path.depth++;\r\n      if (node.parent.children.length > 1) {\r\n        path.forks.unshift(node.parent.children.indexOf(node));\r\n      }\r\n      node = node.parent;\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /// GENERAL TREE NODE MANIPULATION METHODS (subset of DOM API's Node)\r\n\r\n  /**\r\n   * Insert a KNode as the last child node of this node.\r\n   *\r\n   * @throws  {Error} when argument is invalid.\r\n   * @param   {KifuNode} node to append.\r\n   * @returns {number} position(index) of appended node.\r\n   */\r\n\r\n  appendChild(node: KifuNode): number {\r\n    if (node == null || !(node instanceof KifuNode) || node === this) {\r\n      throw new Error('Invalid argument passed to `appendChild` method, KNode was expected.');\r\n    }\r\n\r\n    if (node.parent) {\r\n      node.parent.removeChild(node);\r\n    }\r\n\r\n    node.parent = this;\r\n\r\n    return this.children.push(node) - 1;\r\n  }\r\n\r\n  /**\r\n   * Hard clones a KNode and all of its contents.\r\n   *\r\n   * @param {boolean}  appendToParent if set true, cloned node will be appended to this parent.\r\n   * @returns {KifuNode}  cloned node\r\n   */\r\n\r\n  /*cloneNode(appendToParent?: boolean): KNode {\r\n    const node = new KNode();\r\n    node.innerSGF = this.innerSGF;\r\n\r\n    if (appendToParent && this.parent) {\r\n      this.parent.appendChild(node);\r\n    }\r\n\r\n    return node;\r\n  }*/\r\n\r\n  /**\r\n   * Returns a Boolean value indicating whether a node is a descendant of a given node or not.\r\n   *\r\n   * @param   {KifuNode}   node to be tested\r\n   * @returns {boolean} true, if this node contains given node.\r\n   */\r\n\r\n  contains(node: KifuNode): boolean {\r\n    if (this.children.indexOf(node) >= 0) {\r\n      return true;\r\n    }\r\n\r\n    return this.children.some(child => child.contains(node));\r\n  }\r\n\r\n  /**\r\n   * Inserts the first KNode given in a parameter immediately before the second, child of this KNode.\r\n   *\r\n   * @throws  {Error}   when argument is invalid.\r\n   * @param   {KifuNode}   newNode       node to be inserted\r\n   * @param   {(KifuNode)} referenceNode reference node, if omitted, new node will be inserted at the end.\r\n   * @returns {KifuNode}   this node\r\n   */\r\n\r\n  insertBefore(newNode: KifuNode, referenceNode?: KifuNode): KifuNode {\r\n    if (newNode == null || !(newNode instanceof KifuNode) || newNode === this) {\r\n      throw new Error('Invalid argument passed to `insertBefore` method, KNode was expected.');\r\n    }\r\n    if (referenceNode == null) {\r\n      this.appendChild(newNode);\r\n      return this;\r\n    }\r\n\r\n    if (newNode.parent) {\r\n      newNode.parent.removeChild(newNode);\r\n    }\r\n\r\n    newNode.parent = this;\r\n\r\n    this.children.splice(this.children.indexOf(referenceNode), 0, newNode);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a child node from the current element, which must be a child of the current node.\r\n   *\r\n   * @param   {KifuNode} child node to be removed\r\n   * @returns {KifuNode}  this node\r\n   */\r\n\r\n  removeChild(child: KifuNode): KifuNode {\r\n    this.children.splice(this.children.indexOf(child), 1);\r\n\r\n    child.parent = null;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Replaces one child Node of the current one with the second one given in parameter.\r\n   *\r\n   * @throws  {Error} when argument is invalid\r\n   * @param   {KifuNode} newChild node to be inserted\r\n   * @param   {KifuNode} oldChild node to be replaced\r\n   * @returns {KifuNode} this node\r\n   */\r\n\r\n  replaceChild(newChild: KifuNode, oldChild: KifuNode): KifuNode {\r\n    if (newChild == null || !(newChild instanceof KifuNode) || newChild === this) {\r\n      throw new Error('Invalid argument passed to `replaceChild` method, KNode was expected.');\r\n    }\r\n\r\n    this.insertBefore(newChild, oldChild);\r\n    this.removeChild(oldChild);\r\n\r\n    return this;\r\n  }\r\n\r\n  /// BASIC PROPERTY GETTER and SETTER\r\n\r\n  /**\r\n   * Gets property by SGF property identificator. Returns property value (type depends on property type)\r\n   *\r\n   * @param   {string}   propIdent - SGF property idetificator\r\n   * @returns {any}    property value or values or undefined, if property is missing.\r\n   */\r\n\r\n  getProperty(propIdent: string): any {\r\n    return this.properties[propIdent];\r\n  }\r\n\r\n  /**\r\n   * Sets property by SGF property identificator.\r\n   *\r\n   * @param   {string}  propIdent - SGF property idetificator\r\n   * @param   {any}     value - property value or values\r\n   */\r\n\r\n  setProperty(propIdent: string, value?: any) {\r\n    if (value == null) {\r\n      delete this.properties[propIdent];\r\n    } else {\r\n      this.properties[propIdent] = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /// SGF RAW METHODS\r\n\r\n  /**\r\n   * Gets one SGF property value as string (with brackets `[` and `]`).\r\n   *\r\n   * @param   {string} propIdent SGF property identificator.\r\n   * @returns {string[]} Array of SGF property values or null if there is not such property.\r\n   */\r\n\r\n  getSGFProperty(propIdent: string): string[] {\r\n    if (this.properties[propIdent] != null) {\r\n      const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n      if (Array.isArray(this.properties[propIdent])) {\r\n        return this.properties[propIdent].map(\r\n          (propValue: any) => propertyValueType.transformer.write(propValue).replace(/\\]/g, '\\\\]'),\r\n        );\r\n      }\r\n\r\n      return [propertyValueType.transformer.write(this.properties[propIdent]).replace(/\\]/g, '\\\\]')];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets one SGF property.\r\n   *\r\n   * @param   {string}   propIdent SGF property identificator\r\n   * @param   {string[]} propValues SGF property values\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperty(propIdent: string, propValues?: string[]): KifuNode {\r\n    const propertyValueType = propertyValueTypes[propIdent] || propertyValueTypes._default;\r\n\r\n    if (propValues == null) {\r\n      delete this.properties[propIdent];\r\n      return this;\r\n    }\r\n\r\n    if (propertyValueType.multiple) {\r\n      this.properties[propIdent] = propValues.map(val => propertyValueType.transformer.read(val));\r\n    } else {\r\n      this.properties[propIdent] = propertyValueType.transformer.read(propValues[0]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets multiple SGF properties.\r\n   *\r\n   * @param   {Object}   properties - map with signature propIdent -> propValues.\r\n   * @returns {KifuNode}    this KNode for chaining\r\n   */\r\n\r\n  setSGFProperties(properties: SGFProperties): KifuNode {\r\n    for (const ident in properties) {\r\n      if (properties.hasOwnProperty(ident)) {\r\n        this.setSGFProperty(ident, properties[ident as keyof SGFProperties]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets properties of Kifu node based on the sgf string. Usually you won't use this method directly,\r\n   * but use innerSGF property instead.\r\n   *\r\n   * Basically it parsers the sgf, takes properties from it and adds them to the node.\r\n   * Then if there are other nodes in the string, they will be appended to the node as well.\r\n   *\r\n   * @param {string} sgf SGF text for current node. It must be without trailing `;`,\r\n   *                     however it can contain following nodes.\r\n   * @throws {SGFSyntaxError} throws exception, if sgf string contains invalid SGF.\r\n   */\r\n\r\n  /*setFromSGF(sgf: string) {\r\n    // clean up\r\n    for (let i = this.children.length - 1; i >= 0; i--) {\r\n      this.removeChild(this.children[i]);\r\n    }\r\n    this.SGFProperties = {};\r\n\r\n    // sgf sequence to parse must start with ;\r\n    const sgfSequence = sgf[0] === ';' ? sgf : `;${sgf}`;\r\n\r\n    const parser = new SGFParser(sgfSequence);\r\n\r\n    const sequence = parser.parseSequence();\r\n  }*/\r\n\r\n  /**\r\n   * Transforms KNode object to standard SGF string.\r\n   */\r\n  toSGF() {\r\n    return `(${this.innerSGF})`;\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF transformed to JavaScript object.\r\n   * @param gameTree\r\n   */\r\n  static fromJS(gameTree: SGFGameTree) {\r\n    return processJSGF(gameTree);\r\n  }\r\n\r\n  /**\r\n   * Creates KNode object from SGF string.\r\n   *\r\n   * @param sgf\r\n   * @param gameNo\r\n   */\r\n  static fromSGF(sgf: string, gameNo: number = 0) {\r\n    const parser = new SGFParser(sgf);\r\n    return KifuNode.fromJS(parser.parseCollection()[gameNo]);\r\n  }\r\n}\r\n","export enum PropIdent {\r\n  // Move Properties\r\n  BLACK_MOVE = 'B',\r\n  EXECUTE_ILLEGAL = 'KO',\r\n  MOVE_NUMBER = 'MN',\r\n  WHITE_MOVE = 'W',\r\n\r\n  // Setup Properties\r\n  ADD_BLACK = 'AB',\r\n  CLEAR_FIELD = 'AE',\r\n  ADD_WHITE = 'AW',\r\n  SET_TURN = 'PL',\r\n\r\n  // Node Annotation Properties\r\n  COMMENT = 'C',\r\n  EVEN_POSITION = 'DM',\r\n  GOOD_FOR_BLACK = 'GB',\r\n  GOOD_FOR_WHITE = 'GW',\r\n  HOTSPOT = 'HO',\r\n  NODE_NAME = 'N',\r\n  UNCLEAR_POSITION = 'UC',\r\n  NODE_VALUE = 'V',\r\n\r\n  // Move Annotation Properties\r\n  BAD_MOVE = 'BM',\r\n  DOUBTFUL_MOVE = 'DM',\r\n  INTERESTING_MOVE = 'IT',\r\n  GOOD_MOVE = 'TE',\r\n\r\n  // Markup Properties\r\n  ARROW = 'AR',\r\n  CIRCLE = 'CR',\r\n  DIM = 'DD',\r\n  LABEL = 'LB',\r\n  LINE = 'LN',\r\n  X_MARK = 'MA',\r\n  SELECTED = 'SL',\r\n  SQUARE = 'SQ',\r\n  TRIANGLE = 'TR',\r\n\r\n  // Root Properties\r\n  APPLICATION = 'AP',\r\n  CHARSET = 'CA',\r\n  SGF_VERSION = 'FF',\r\n  GAME_TYPE = 'GM',\r\n  VARIATIONS_STYLE = 'ST',\r\n  BOARD_SIZE = 'SZ',\r\n\r\n  // Game Info Properties\r\n  ANNOTATOR = 'AN',\r\n  BLACK_RANK = 'BR',\r\n  BLACK_TEAM = 'BT',\r\n  COPYRIGHT = 'CP',\r\n  DATE = 'DT',\r\n  EVENT = 'EV',\r\n  GAME_NAME = 'GN',\r\n  GAME_COMMENT = 'GC',\r\n  OPENING_INFO = 'ON',\r\n  OVER_TIME = 'OT',\r\n  BLACK_NAME = 'BN',\r\n  PLACE = 'PC',\r\n  WHITE_NAME = 'PW',\r\n  RESULT = 'RE',\r\n  ROUND = 'RO',\r\n  RULES = 'RU',\r\n  SOURCE = 'SO',\r\n  TIME_LIMITS = 'TM',\r\n  AUTHOR = 'US',\r\n  WHITE_RANK = 'WR',\r\n  WHITE_TEAM = 'WT',\r\n\r\n  // Timing Properties\r\n  BLACK_TIME_LEFT = 'BL',\r\n  BLACK_STONES_LEFT = 'OB',\r\n  WHITE_STONES_LEFT = 'OW',\r\n  WHITE_TIME_LEFT = 'WL',\r\n\r\n  // Miscellaneous Properties\r\n  FIGURE = 'FG',\r\n  PRINT_MOVE_NUMBERS = 'PM',\r\n  BOARD_SECTION = 'VW',\r\n  HANDICAP = 'HA',\r\n\r\n  // GO specific Properties\r\n  KOMI = 'KM',\r\n  BLACK_TERRITORY = 'TB',\r\n  WHITE_TERRITORY = 'TW',\r\n}\r\n\r\nexport type SGFProperties = {\r\n  [key in PropIdent]?: string[];\r\n};\r\n\r\nexport type SGFNode = SGFProperties;\r\n\r\nexport interface SGFGameTree {\r\n  sequence: SGFNode[];\r\n  children: SGFGameTree[];\r\n}\r\n\r\nexport type SGFCollection = SGFGameTree[];\r\n","import EventEmitter from '../utils/EventEmitter';\r\nimport KifuNode, { Path } from './KifuNode';\r\nimport Game from '../Game/Game';\r\nimport { PropIdent } from '../SGFParser/sgfTypes';\r\nimport goRules, { JAPANESE_RULES } from '../Game/rules';\r\nimport { Color, Point } from '../types';\r\n\r\n/**\r\n * Contains functionality to create, edit and manipulate go game record. It is basically virtual player\r\n * with API without board and any UI.\r\n */\r\nexport default class KifuReader extends EventEmitter {\r\n  rootNode: KifuNode;\r\n  currentNode: KifuNode;\r\n  game: Game;\r\n\r\n  constructor(rootNode: KifuNode = new KifuNode()) {\r\n    super();\r\n\r\n    this.rootNode = rootNode;\r\n    this.currentNode = rootNode;\r\n\r\n    this.executeRootNode();\r\n    this.executeNode();\r\n  }\r\n\r\n  /**\r\n   * This will execute root node (root properties) once and initialize Game object\r\n   */\r\n  protected executeRootNode() {\r\n    const size = this.getRootProperty(PropIdent.BOARD_SIZE) || 19;\r\n    const rules = goRules[this.getRootProperty(PropIdent.RULES) as keyof typeof goRules] || JAPANESE_RULES;\r\n    const handicap = this.getRootProperty(PropIdent.HANDICAP) || 0;\r\n\r\n    this.game = new Game(size, rules);\r\n    if (handicap > 1) {\r\n      this.game.turn = Color.WHITE;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes node. It will go through its properties and make changes in game object.\r\n   */\r\n  protected executeNode() {\r\n    // first process setup\r\n    const addBlack: Point[] = this.getProperty(PropIdent.ADD_BLACK) || [];\r\n    const addWhite: Point[] = this.getProperty(PropIdent.ADD_WHITE) || [];\r\n    const clear: Point[] = this.getProperty(PropIdent.CLEAR_FIELD) || [];\r\n\r\n    addBlack.forEach(p => this.game.setStone(p.x, p.y, Color.BLACK));\r\n    addWhite.forEach(p => this.game.setStone(p.x, p.y, Color.WHITE));\r\n    clear.forEach(p => this.game.setStone(p.x, p.y, Color.EMPTY));\r\n\r\n    // then play a move\r\n    const blackMove: Point = this.getProperty(PropIdent.BLACK_MOVE);\r\n    const whiteMove: Point = this.getProperty(PropIdent.WHITE_MOVE);\r\n\r\n    if (blackMove !== undefined && whiteMove !== undefined) {\r\n      throw 'Some error';\r\n    }\r\n\r\n    if (blackMove !== undefined) {\r\n      if (blackMove) {\r\n        this.game.position.applyMove(blackMove.x, blackMove.y, Color.BLACK, true, true);\r\n      } else {\r\n        // pass\r\n        this.game.position.turn = Color.WHITE;\r\n      }\r\n    } else if (whiteMove !== undefined) {\r\n      if (whiteMove) {\r\n        this.game.position.applyMove(whiteMove.x, whiteMove.y, Color.WHITE, true, true);\r\n      } else {\r\n        // pass\r\n        this.game.position.turn = Color.BLACK;\r\n      }\r\n    }\r\n\r\n    // set turn\r\n    const turn: Color.BLACK | Color.WHITE = this.getProperty(PropIdent.SET_TURN);\r\n\r\n    if (turn) {\r\n      this.game.turn = turn;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This will revert game changes of current node and re-execute it. Use this, after KifuNode properties are updated.\r\n   */\r\n  resetNode() {\r\n    if (this.currentNode.parent) {\r\n      // update normal node\r\n      this.game.popPosition();\r\n      this.game.pushPosition(this.game.position.clone());\r\n      this.executeNode();\r\n    } else {\r\n      // update root node\r\n      this.executeRootNode();\r\n      this.executeNode();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets property of current node.\r\n   *\r\n   * @param propIdent\r\n   */\r\n  getProperty(propIdent: PropIdent) {\r\n    return this.currentNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Gets property of root node.\r\n   *\r\n   * @param propIdent\r\n   */\r\n  getRootProperty(propIdent: PropIdent) {\r\n    return this.rootNode.getProperty(propIdent);\r\n  }\r\n\r\n  /**\r\n   * Returns array of next nodes (children).\r\n   */\r\n  getNextNodes() {\r\n    return this.currentNode.children;\r\n  }\r\n\r\n  /**\r\n   * Go to a next node and executes it (updates game object).\r\n   * @param node\r\n   */\r\n  next(node: number | KifuNode = 0) {\r\n    if (this.currentNode.children.length) {\r\n      let i: number;\r\n\r\n      if (typeof node === 'number') {\r\n        i = node;\r\n      } else {\r\n        i = this.currentNode.children.indexOf(node);\r\n      }\r\n\r\n      if (this.currentNode.children[i]) {\r\n        this.game.pushPosition(this.game.position.clone());\r\n        this.currentNode = this.currentNode.children[i];\r\n        this.executeNode();\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the previous node.\r\n   */\r\n  previous() {\r\n    if (this.currentNode.parent) {\r\n      this.game.popPosition();\r\n      this.currentNode = this.currentNode.parent;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Go to the first position - root node.\r\n   */\r\n  first() {\r\n    this.game.clear();\r\n    this.currentNode = this.rootNode;\r\n  }\r\n\r\n  /**\r\n   * Go to the last position.\r\n   */\r\n  last() {\r\n    while (this.next()) {}\r\n  }\r\n\r\n  /**\r\n   * Go to specified path.\r\n   */\r\n  goTo(pathOrMoveNumber: Path | number) {\r\n    const path = typeof pathOrMoveNumber === 'number' ? { depth: pathOrMoveNumber, forks: [] } : pathOrMoveNumber;\r\n    this.first();\r\n\r\n    for (let i = 0, j = 0; i < path.depth; i++) {\r\n      if (this.currentNode.children.length > 1) {\r\n        this.next(path.forks[j++]);\r\n      } else {\r\n        this.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Go to previous fork (a node with more than one child).\r\n\t */\r\n  previousFork() {\r\n    while (this.previous()) {\r\n      if (this.currentNode.children.length > 1) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Player } from '..';\r\n\r\nexport interface PropertyHandler {\r\n  (player: Player, propIdent: string, propValue: any): void;\r\n}\r\n\r\nconst propertyHandlers: { [propIdent: string]: PropertyHandler } = {\r\n  //B(player, propIdent, propValue) {\r\n  //  player.addTemporaryBoardObject({ type: 'CR', field: propValue, params: { color: 'rgba(255,255,255,0.8)' } });\r\n  //},\r\n  //W(player, propIdent, propValue) {\r\n  //  player.addTemporaryBoardObject({ type: 'CR', field: propValue, params: { color: 'rgba(0,0,0,0.8)' } });\r\n  //},\r\n};\r\n\r\nexport default propertyHandlers;\r\n","import makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport { PlayerConfig } from './types';\r\nimport playerDefaultConfig from './defaultConfig';\r\nimport CanvasBoard from '../CanvasBoard';\r\nimport KifuReader from '../kifu/KifuReader';\r\nimport KifuNode from '../kifu/KifuNode';\r\nimport { Color } from '../types';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport propertyHandlers from './propertyHandlers';\r\nimport BoardObject from '../CanvasBoard/boardObjects/BoardObject';\r\n\r\nconst colorsMap: { [key: string]: Color } = {\r\n  B: Color.BLACK,\r\n  W: Color.WHITE,\r\n};\r\n\r\nexport default class Player extends EventEmitter {\r\n  element: HTMLElement;\r\n  config: PlayerConfig;\r\n  board: CanvasBoard;\r\n  kifuReader: KifuReader;\r\n  stoneBoardsObjects: BoardObject[];\r\n  markupBoardObjects: BoardObject[];\r\n\r\n  // handleBoardClick(event: UIEvent, point: Point): void;\r\n\r\n  constructor(element: HTMLElement, config: PartialRecursive<PlayerConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.element = element;\r\n    this.config = makeConfig(playerDefaultConfig, config);\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.board = new CanvasBoard(this.element, {\r\n      theme: this.config.boardTheme,\r\n    });\r\n    this.stoneBoardsObjects = [];\r\n    this.markupBoardObjects = [];\r\n\r\n    if (this.config.sgf) {\r\n      this.kifuReader = new KifuReader(KifuNode.fromSGF(this.config.sgf));\r\n    } else {\r\n      this.kifuReader = new KifuReader();\r\n    }\r\n\r\n    this.updateBoard();\r\n\r\n    // this.handleBoardClick = (_e, point) => {\r\n    //\r\n    // };\r\n\r\n    // this.board.on('click', )\r\n  }\r\n\r\n  updateBoard() {\r\n    // Remove missing stones in current position\r\n    //this.stoneBoardsObjects = this.stoneBoardsObjects.filter((boardObject) => {\r\n    //  if (this.kifuReader.game.getStone(boardObject.x, boardObject.y) !== colorsMap[boardObject.type]) {\r\n    //    this.board.removeObject(boardObject);\r\n    //    return false;\r\n    //  }\r\n    //  return true;\r\n    //});\r\n//\r\n    //// Add new stones from current position\r\n    //const position = this.kifuReader.game.position;\r\n//\r\n    //for (let x = 0; x < position.size; x++) {\r\n    //  for (let y = 0; y < position.size; y++) {\r\n    //    const c = position.get(x, y);\r\n    //    if (c && !this.stoneBoardsObjects.some(\r\n    //      boardObject => boardObject.x === x && boardObject.y === y && c === colorsMap[boardObject.type],\r\n    //    )) {\r\n    //      const boardObject = { type: c === Color.B ? 'B' : 'W', field: { x, y } };\r\n    //      this.board.addObject(boardObject);\r\n    //      this.stoneBoardsObjects.push(boardObject);\r\n    //    }\r\n    //  }\r\n    //}\r\n\r\n    // Remove all markup\r\n    this.markupBoardObjects.forEach(boardObject => this.board.removeObject(boardObject));\r\n    this.markupBoardObjects = [];\r\n\r\n    Object.keys(this.kifuReader.currentNode.properties).forEach((propIdent) => {\r\n      if (propertyHandlers[propIdent]) {\r\n        propertyHandlers[propIdent](this, propIdent, this.kifuReader.currentNode.properties[propIdent]);\r\n      }\r\n    });\r\n  }\r\n\r\n  next() {\r\n    this.kifuReader.next();\r\n    this.updateBoard();\r\n  }\r\n\r\n  previous() {\r\n    this.kifuReader.previous();\r\n    this.updateBoard();\r\n  }\r\n\r\n  /**\r\n   * Adds temporary board object, which will be removed during next position/node update.\r\n   * @param boardObject\r\n   */\r\n  addTemporaryBoardObject(boardObject: BoardObject) {\r\n    this.markupBoardObjects.push(boardObject);\r\n    this.board.addObject(boardObject);\r\n  }\r\n}\r\n","// All public API is exported here\r\n\r\nexport { default as SGFParser, SGFSyntaxError } from './SGFParser';\r\nexport { default as CanvasBoard } from './CanvasBoard';\r\nexport * from './CanvasBoard';\r\nexport * from './Game';\r\nexport { default as Player } from './Player';\r\n"],"names":["tslib_1.__extends","drawHandlers.realisticStone","drawHandlers.shellStoneBlack","drawHandlers.shellStoneWhite","defaultConfig","Repeating","defaultBoardConfig"],"mappings":"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AE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACnE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACnF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBACpF,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBACpF,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,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EA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IAEA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;;;ICnoBA;;;;;;;;;;;;;;;;;;;;QA0BE,cAAY,IAAiB,EAAE,KAA+B;YAAlD,qBAAA,EAAA,SAAiB;YAAE,sBAAA,EAAA,sBAA+B;YAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,QAAQ,C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"}