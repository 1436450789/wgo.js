{"version":3,"file":"index.js","sources":["../src/SGFParser/SGFSyntaxError.ts","../src/SGFParser/SGFParser.ts","../src/CanvasBoard/CanvasLayer.ts","../src/CanvasBoard/ShadowLayer.ts","../src/CanvasBoard/drawHandlers/stoneShadow.ts","../src/CanvasBoard/drawHandlers/shellStoneBlack.ts","../src/CanvasBoard/drawHandlers/shellStoneWhite.ts","../src/CanvasBoard/drawHandlers/glassStoneBlack.ts","../src/CanvasBoard/drawHandlers/glassStoneWhite.ts","../src/CanvasBoard/drawHandlers/paintedStoneBlack.ts","../src/CanvasBoard/drawHandlers/paintedStoneWhite.ts","../src/CanvasBoard/drawHandlers/simpleStone.ts","../src/CanvasBoard/drawHandlers/realisticStone.ts","../src/CanvasBoard/drawHandlers/circle.ts","../src/CanvasBoard/drawHandlers/square.ts","../src/CanvasBoard/drawHandlers/triangle.ts","../src/CanvasBoard/drawHandlers/label.ts","../src/CanvasBoard/drawHandlers/dot.ts","../src/CanvasBoard/drawHandlers/xMark.ts","../src/CanvasBoard/drawHandlers/smileyFace.ts","../src/CanvasBoard/drawHandlers/coordinates.ts","../src/CanvasBoard/drawHandlers/gridFieldClear.ts","../src/CanvasBoard/themes/baseTheme.ts","../src/CanvasBoard/themes/realisticTheme.ts","../src/CanvasBoard/themes/modernTheme.ts","../src/CanvasBoard/themes/index.ts","../src/CanvasBoard/defaultConfig.ts","../src/utils/makeConfig.ts","../src/utils/EventEmitter.ts","../src/CanvasBoard/drawHandlers/grid.ts","../src/CanvasBoard/CanvasBoard.ts","../src/Game/rules.ts","../src/types.ts","../src/Game/Position.ts","../src/Game/Game.ts","../src/index.ts"],"sourcesContent":["import SGFParser from './SGFParser';\r\n\r\n/**\r\n * Class for syntax errors in SGF string.\r\n * @ extends Error\r\n */\r\nexport class SGFSyntaxError extends Error {\r\n  // tslint:disable-next-line:variable-name\r\n  __proto__: Error;\r\n\r\n  constructor(message: string, parser?: SGFParser) {\r\n    super(message);\r\n    this.__proto__ = new.target.prototype;\r\n\r\n    // var tempError = Error.apply(this);\r\n    this.name = this.name = 'SGFSyntaxError';\r\n    this.message = message || 'There was an unspecified syntax error in the SGF';\r\n\r\n    if (parser) {\r\n      this.message += ` on line ${parser.lineNo}, char ${parser.charNo}:\\n`;\r\n      this.message += `\\t${parser.sgfString.split('\\n')[parser.lineNo - 1]}\\n`;\r\n      this.message += `\\t${Array(parser.charNo + 1).join(' ')}^`;\r\n    }\r\n  }\r\n}\r\n\r\n// a small ES5 hack because currently in ES6 you can't extend Errors\r\n// SGFSyntaxError.prototype = Object.create(Error.prototype);\r\n// SGFSyntaxError.prototype.constructor = SGFSyntaxError;\r\n\r\nexport default SGFSyntaxError;\r\n","import SGFSyntaxError from './SGFSyntaxError';\r\nimport { PropIdent, SGFProperties, SGFCollection, SGFGameTree, SGFNode } from './sgfTypes';\r\n\r\n/**\r\n * Contains methods for parsing sgf string.\r\n * @module SGFParser\r\n */\r\n\r\nconst CODE_A = 'A'.charCodeAt(0);\r\nconst CODE_Z = 'Z'.charCodeAt(0);\r\nconst CODE_WHITE_CHAR = ' '.charCodeAt(0);\r\n\r\nfunction isCharUCLetter(char: string) {\r\n  if (!char) {\r\n    return false;\r\n  }\r\n\r\n  const charCode = char.charCodeAt(0);\r\n  return charCode >= CODE_A && charCode <= CODE_Z;\r\n}\r\n\r\n/**\r\n * Class for parsing of sgf files. Can be used for parsing of SGF fragments as well.\r\n */\r\n\r\nexport default class SGFParser {\r\n  /** SGF string to be parsed */\r\n  sgfString: string;\r\n\r\n  /** Current character position */\r\n  position: number = 0;\r\n\r\n  /** Current line number */\r\n  lineNo: number = 1;\r\n\r\n  /** Current char number (on the line) */\r\n  charNo: number = 0;\r\n\r\n  /**\r\n   * Creates new instance of SGF parser with SGF loaded ready to be parsed.\r\n   * @param sgf string to parse.\r\n   */\r\n  constructor(sgf: string) {\r\n    this.sgfString = sgf;\r\n  }\r\n\r\n  /**\r\n   * Returns current significant character (ignoring whitespace characters).\r\n   * If there is end of string, return undefined.\r\n   */\r\n  protected currentChar(): string {\r\n    while (this.sgfString.charCodeAt(this.position) <= CODE_WHITE_CHAR) {\r\n      // While the character is a whitespace, increase position pointer and line and column numbers.\r\n      this.nextChar();\r\n    }\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Move pointer to next character and return it (including whitespace).\r\n   */\r\n  protected nextChar() {\r\n    if (this.sgfString[this.position] === '\\n') {\r\n      this.charNo = 0;\r\n      this.lineNo++;\r\n    } else {\r\n      this.charNo++;\r\n    }\r\n    this.position++;\r\n\r\n    return this.sgfString[this.position];\r\n  }\r\n\r\n  /**\r\n   * Reads current significant character and if it isn't equal with the argument, throws an error.\r\n   * Then move pointer to next character.\r\n   */\r\n  protected processChar(char: string) {\r\n    if (this.currentChar() !== char) {\r\n      throw new SGFSyntaxError(`Unexpected character ${this.currentChar()}. Character ${char} was expected.`, this);\r\n    }\r\n\r\n    return this.nextChar();\r\n  }\r\n\r\n  /**\r\n   * Parse SGF property value - `\"[\" CValueType \"]\"`.\r\n   * @param optional\r\n   */\r\n  parsePropertyValue(optional?: boolean): string {\r\n    if (optional && this.currentChar() !== '[') {\r\n      return;\r\n    }\r\n\r\n    let value = '';\r\n\r\n    // process \"[\" and read first char\r\n    let char = this.processChar('[');\r\n\r\n    while (char !== ']') {\r\n      if (!char) {\r\n        // char mustn't be undefined\r\n        throw new SGFSyntaxError('End of SGF inside of property', this);\r\n      } else if (char === '\\\\') {\r\n        // if there is character '\\' save next character\r\n        char = this.nextChar();\r\n\r\n        if (!char) {\r\n          // char have to exist of course\r\n          throw new SGFSyntaxError('End of SGF inside of property', this);\r\n        } else if (char === '\\n') {\r\n          // ignore new line, otherwise save\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // save the character\r\n      value += char;\r\n\r\n      // and move to next one\r\n      char = this.nextChar();\r\n    }\r\n\r\n    this.processChar(']');\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Reads the property identifiers (One or more UC letters) - `UcLetter { UcLetter }`.\r\n   */\r\n  parsePropertyIdent(): PropIdent {\r\n    let ident = '';\r\n\r\n    // Read current significant character\r\n    let char = this.currentChar();\r\n\r\n    if (!isCharUCLetter(char)) {\r\n      throw new SGFSyntaxError('Property identifier must consists from upper case letters.', this);\r\n    }\r\n\r\n    ident += char;\r\n\r\n    while (char = this.nextChar()) {\r\n      if (!isCharUCLetter(char)) {\r\n        break;\r\n      }\r\n\r\n      ident += char;\r\n    }\r\n\r\n    return ident as PropIdent;\r\n  }\r\n\r\n  /**\r\n   * Parses sequence of property values - `PropValue { PropValue }`.\r\n   */\r\n  parsePropertyValues() {\r\n    const values: string[] = [];\r\n    let value = this.parsePropertyValue();\r\n\r\n    if (value) {\r\n      values.push(value);\r\n    }\r\n\r\n    while (value = this.parsePropertyValue(true)) {\r\n      values.push(value);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF property - `PropIdent PropValue { PropValue }`.\r\n   */\r\n  parseProperty(): [PropIdent, string[]] {\r\n    if (!isCharUCLetter(this.currentChar())) {\r\n      return;\r\n    }\r\n\r\n    return [this.parsePropertyIdent(), this.parsePropertyValues()];\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF node - `\";\" { Property }`.\r\n   */\r\n  parseNode(): SGFNode {\r\n    this.processChar(';');\r\n\r\n    const properties: SGFProperties = {};\r\n    let property: [PropIdent, string[]];\r\n\r\n    while (property = this.parseProperty()) {\r\n      properties[property[0]] = property[1];\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF Sequence - `Node { Node }`.\r\n   */\r\n  parseSequence(): SGFNode[] {\r\n    const sequence: SGFNode[] = [];\r\n\r\n    sequence.push(this.parseNode());\r\n\r\n    while (this.currentChar() === ';') {\r\n      sequence.push(this.parseNode());\r\n    }\r\n\r\n    return sequence;\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *GameTree* - `\"(\" Sequence { GameTree } \")\"`.\r\n   */\r\n  parseGameTree(): SGFGameTree {\r\n    this.processChar('(');\r\n\r\n    const sequence = this.parseSequence();\r\n    let children: SGFGameTree[] = [];\r\n\r\n    if (this.currentChar() === '(') {\r\n      children = this.parseCollection();\r\n    }\r\n\r\n    this.processChar(')');\r\n\r\n    return { sequence, children };\r\n  }\r\n\r\n  /**\r\n   * Parses a SGF *Collection* - `Collection = GameTree { GameTree }`. This is the main method for parsing SGF file.\r\n   */\r\n  parseCollection(): SGFCollection {\r\n    const gameTrees: SGFCollection = [];\r\n    gameTrees.push(this.parseGameTree());\r\n\r\n    while (this.currentChar() === '(') {\r\n      gameTrees.push(this.parseGameTree());\r\n    }\r\n\r\n    return gameTrees;\r\n  }\r\n}\r\n","/* global document, window */\r\nimport CanvasBoard from './CanvasBoard';\r\nimport { DrawFunction, BoardFieldObject, BoardFreeObject } from './types';\r\nimport { Point } from '../types';\r\n\r\n/**\r\n * @class\r\n * Implements one layer of the HTML5 canvas\r\n */\r\n\r\nexport default class CanvasLayer {\r\n  element: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  pixelRatio: number;\r\n\r\n  constructor() {\r\n    this.element = document.createElement('canvas');\r\n    this.context = this.element.getContext('2d');\r\n\r\n    // Adjust pixel ratio for HDPI screens (e.g. Retina)\r\n    this.pixelRatio = window.devicePixelRatio || 1;\r\n    this.context.scale(this.pixelRatio, this.pixelRatio);\r\n    this.context.save();\r\n  }\r\n\r\n  setDimensions(width: number, height: number, board: CanvasBoard) {\r\n    const linesShift = board.config.theme.linesShift;\r\n\r\n    this.element.width = width;\r\n    this.element.style.width = `${width / this.pixelRatio}px`;\r\n    this.element.height = height;\r\n    this.element.style.height = `${height / this.pixelRatio}px`;\r\n\r\n    this.context.transform(1, 0, 0, 1, linesShift, linesShift);\r\n  }\r\n\r\n  appendTo(element: HTMLElement, weight: number) {\r\n    this.element.style.position = 'absolute';\r\n    this.element.style.zIndex = weight.toString(10);\r\n    this.element.style.top = '0';\r\n    this.element.style.bottom = '0';\r\n    this.element.style.left = '0';\r\n    this.element.style.right = '0';\r\n    this.element.style.margin = 'auto';\r\n    element.appendChild(this.element);\r\n  }\r\n\r\n  removeFrom(element: HTMLElement) {\r\n    element.removeChild(this.element);\r\n  }\r\n\r\n  getContext() {\r\n    return this.context;\r\n  }\r\n\r\n  draw<P extends BoardFreeObject>(drawingFn: DrawFunction<P>, args: P, board: CanvasBoard) {\r\n    try {\r\n      this.context.save();\r\n      drawingFn(this.context, args, board);\r\n      this.context.restore();\r\n    } catch (err) {\r\n      // If the board is too small some canvas painting function can throw an exception, but we don't\r\n      // want to break our app\r\n      // tslint:disable-next-line:no-console\r\n      console.error(`Object couldn't be rendered. Error: ${err.message}`, args);\r\n    }\r\n  }\r\n\r\n  drawField<P extends BoardFieldObject>(drawingFn: DrawFunction<P>, args: P, board: CanvasBoard) {\r\n    try {\r\n      const leftOffset = Math.round(board.getX(args.field.x));\r\n      const topOffset = Math.round(board.getY(args.field.y));\r\n\r\n      // create a \"sandbox\" for drawing function\r\n      this.context.save();\r\n\r\n      this.context.transform(board.fieldSize - 1, 0, 0, board.fieldSize - 1, leftOffset, topOffset);\r\n      this.context.beginPath();\r\n      this.context.rect(-0.5, -0.5, 1, 1);\r\n      this.context.clip();\r\n      drawingFn(this.context, args, board);\r\n\r\n      // restore context\r\n      this.context.restore();\r\n    } catch (err) {\r\n      // If the board is too small some canvas painting function can throw an exception, but we don't\r\n      // want to break our app\r\n      // tslint:disable-next-line:no-console\r\n      console.error(`Object couldn't be rendered. Error: ${err.message}`, args);\r\n    }\r\n  }\r\n\r\n  clear(_board: CanvasBoard) {\r\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\r\n  }\r\n\r\n  clearField(field: Point, board: CanvasBoard) {\r\n    const leftOffset = Math.round(board.getX(field.x));\r\n    const topOffset = Math.round(board.getY(field.y));\r\n\r\n    this.context.clearRect(\r\n      leftOffset - board.fieldSize / 2,\r\n      topOffset - board.fieldSize / 2,\r\n      board.fieldSize,\r\n      board.fieldSize,\r\n    );\r\n  }\r\n}\r\n","import CanvasLayer from './CanvasLayer';\r\nimport CanvasBoard from './CanvasBoard';\r\n\r\n/**\r\n * @class\r\n * @extends WGo.CanvasBoard.CanvasLayer\r\n * Layer for shadows. It is slightly translated.\r\n */\r\n\r\nexport default class ShadowLayer extends CanvasLayer {\r\n  setDimensions(width: number, height: number, board: CanvasBoard) {\r\n    super.setDimensions(width, height, board);\r\n    this.context.transform(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      board.config.theme.shadowOffsetX * board.fieldSize,\r\n      board.config.theme.shadowOffsetY * board.fieldSize,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Generic shadow draw handler for all stones\r\n *\r\n * \"shadowBlur\" 0-1\r\n * 0 - no blur - createRadialGradient(0, 0, stoneRadius, 0, 0, stoneRadius)\r\n * 1 - maximal blur - createRadialGradient(0, 0, 0, 0, 0, 8/7*stoneRadius)\r\n */\r\n\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default function (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n  const stoneRadius = board.config.theme.stoneSize;\r\n  const blur = board.config.theme.shadowBlur;\r\n\r\n  const startRadius = Math.max(stoneRadius - stoneRadius * blur, 0.00001);\r\n  const stopRadius = stoneRadius + (1 / 7 * stoneRadius) * blur;\r\n\r\n  const gradient = canvasCtx.createRadialGradient(0, 0, startRadius, 0, 0, stopRadius);\r\n  gradient.addColorStop(0, board.config.theme.shadowColor);\r\n  gradient.addColorStop(1, board.config.theme.shadowTransparentColor);\r\n\r\n  canvasCtx.beginPath();\r\n  canvasCtx.fillStyle = gradient;\r\n  canvasCtx.arc(0, 0, stopRadius, 0, 2 * Math.PI, true);\r\n  canvasCtx.fill();\r\n}\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = '#000';\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      let radGrad = canvasCtx.createRadialGradient(\r\n        0.4 * stoneRadius,\r\n        0.4 * stoneRadius,\r\n        0,\r\n        0.5 * stoneRadius,\r\n        0.5 * stoneRadius,\r\n        stoneRadius,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(32,32,32,1)');\r\n      radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(\r\n        0,\r\n        0,\r\n        stoneRadius,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.fill();\r\n\r\n      radGrad = canvasCtx.createRadialGradient(\r\n        -0.4 * stoneRadius,\r\n        -0.4 * stoneRadius,\r\n        0.05 * stoneRadius,\r\n        -0.5 * stoneRadius,\r\n        -0.5 * stoneRadius,\r\n        1.5 * stoneRadius,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(64,64,64,1)');\r\n      radGrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(\r\n        0,\r\n        0,\r\n        stoneRadius,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\n// shell stone helping functions\r\nconst shellSeed = Math.ceil(Math.random() * 9999999);\r\n\r\n// tslint:disable-next-line:max-line-length\r\nconst drawShellLine = function (ctx: CanvasRenderingContext2D, x: number, y: number, r: number, startAngle: number, endAngle: number, factor: number, thickness: number) {\r\n  ctx.strokeStyle = 'rgba(64,64,64,0.2)';\r\n\r\n  ctx.lineWidth = (r / 30) * thickness;\r\n  ctx.beginPath();\r\n\r\n  const radius = r * 0.9;\r\n\r\n  const x1 = x + radius * Math.cos(startAngle * Math.PI);\r\n  const y1 = y + radius * Math.sin(startAngle * Math.PI);\r\n  const x2 = x + radius * Math.cos(endAngle * Math.PI);\r\n  const y2 = y + radius * Math.sin(endAngle * Math.PI);\r\n\r\n  let m;\r\n  let angle;\r\n  let diffX;\r\n  let diffY;\r\n\r\n  if (x2 > x1) {\r\n    m = (y2 - y1) / (x2 - x1);\r\n    angle = Math.atan(m);\r\n  } else if (x2 === x1) {\r\n    angle = Math.PI / 2;\r\n  } else {\r\n    m = (y2 - y1) / (x2 - x1);\r\n    angle = Math.atan(m) - Math.PI;\r\n  }\r\n\r\n  const c = factor * radius;\r\n  diffX = Math.sin(angle) * c;\r\n  diffY = Math.cos(angle) * c;\r\n\r\n  const bx1 = x1 + diffX;\r\n  const by1 = y1 - diffY;\r\n\r\n  const bx2 = x2 + diffX;\r\n  const by2 = y2 - diffY;\r\n\r\n  ctx.moveTo(x1, y1);\r\n  ctx.bezierCurveTo(bx1, by1, bx2, by2, x2, y2);\r\n  ctx.stroke();\r\n};\r\n\r\nconst drawShell = function (arg: any) {\r\n  let fromAngle = arg.angle;\r\n  let toAngle = arg.angle;\r\n\r\n  for (let i = 0; i < arg.lines.length; i++) {\r\n    fromAngle += arg.lines[i];\r\n    toAngle -= arg.lines[i];\r\n    drawShellLine(arg.ctx, arg.x, arg.y, arg.radius, fromAngle, toAngle, arg.factor, arg.thickness);\r\n  }\r\n};\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = '#aaa';\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      // do shell magic here\r\n      const type = shellSeed % (3 + args.field.x * board.config.size + args.field.y) % 3;\r\n      const z = board.config.size * board.config.size + args.field.x * board.config.size + args.field.y;\r\n      const angle = (2 / z) * (shellSeed % z);\r\n\r\n      if (type === 0) {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.10, 0.12, 0.11, 0.10, 0.09, 0.09, 0.09, 0.09],\r\n          factor: 0.25,\r\n          thickness: 1.75,\r\n        });\r\n      } else if (type === 1) {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.10, 0.09, 0.08, 0.07, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06],\r\n          factor: 0.2,\r\n          thickness: 1.5,\r\n        });\r\n      } else {\r\n        drawShell({\r\n          ctx: canvasCtx,\r\n          x: 0,\r\n          y: 0,\r\n          radius: stoneRadius,\r\n          angle,\r\n          lines: [0.12, 0.14, 0.13, 0.12, 0.12, 0.12],\r\n          factor: 0.3,\r\n          thickness: 2,\r\n        });\r\n      }\r\n\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        stoneRadius / 3,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        5 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, 'rgba(255,255,255,0.9)');\r\n      radGrad.addColorStop(1, 'rgba(255,255,255,0)');\r\n\r\n      // add radial gradient //\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  // draw handler for stone layer\r\n  drawField: {\r\n    // drawing function - args object contain info about drawing object, board is main board object\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radgrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        1,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radgrad.addColorStop(0, '#666');\r\n      radgrad.addColorStop(1, '#000');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radgrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  // draw handler for stone layer\r\n  drawField: {\r\n    // drawing function - args object contain info about drawing object, board is main board object\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radgrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        stoneRadius / 3,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        5 * stoneRadius / 5,\r\n      );\r\n\r\n      radgrad.addColorStop(0, '#fff');\r\n      radgrad.addColorStop(1, '#aaa');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radgrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        1 * stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, '#111');\r\n      radGrad.addColorStop(1, '#000');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n      canvasCtx.strokeStyle = '#ccc';\r\n      canvasCtx.arc(-stoneRadius / 8, -stoneRadius / 8, stoneRadius / 2, Math.PI, 1.5 * Math.PI);\r\n\r\n      canvasCtx.stroke();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","import shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      const radGrad = canvasCtx.createRadialGradient(\r\n        -2 * stoneRadius / 5,\r\n        -2 * stoneRadius / 5,\r\n        2 * stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        -stoneRadius / 5,\r\n        4 * stoneRadius / 5,\r\n      );\r\n      radGrad.addColorStop(0, '#fff');\r\n      radGrad.addColorStop(1, '#ddd');\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.fillStyle = radGrad;\r\n      canvasCtx.arc(0, 0, stoneRadius, 0, 2 * Math.PI, true);\r\n      canvasCtx.fill();\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.lineWidth = stoneRadius / 6;\r\n\r\n      canvasCtx.strokeStyle = '#999';\r\n      canvasCtx.arc(stoneRadius / 8, stoneRadius / 8, stoneRadius / 2, 0, Math.PI / 2, false);\r\n\r\n      canvasCtx.stroke();\r\n    },\r\n    shadow,\r\n  },\r\n};\r\n","// Black and white stone\r\nimport CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default function (color: string) {\r\n  return {\r\n    drawField: {\r\n      stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        const stoneSize = board.config.theme.stoneSize;\r\n        const lw = board.config.theme.markupLinesWidth;\r\n\r\n        canvasCtx.fillStyle = color;\r\n\r\n        canvasCtx.beginPath();\r\n        canvasCtx.arc(0, 0, stoneSize, 0, 2 * Math.PI, true);\r\n        canvasCtx.fill();\r\n\r\n        canvasCtx.lineWidth = lw;\r\n        canvasCtx.strokeStyle = 'black';\r\n        canvasCtx.stroke();\r\n      },\r\n    },\r\n  };\r\n}\r\n","/* global window */\r\n\r\nimport shadow from './stoneShadow';\r\nimport CanvasBoard from '..';\r\nimport { FieldDrawHandler, BoardFieldObject } from '../types';\r\n\r\n// Check if image has been loaded properly\r\n// see https://stereochro.me/ideas/detecting-broken-images-js\r\nfunction isOkay(img: any) {\r\n  if (typeof img === 'string') { return false; }\r\n  if (!img.complete) { return false; }\r\n  if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// Shadow handler for the 'REALISTIC' rendering mode\r\n// handler for image based stones\r\nexport default function (graphic: any[], fallback: FieldDrawHandler) {\r\n  const randSeed = Math.ceil(Math.random() * 9999999);\r\n  let redrawRequest: number;\r\n\r\n  return {\r\n    drawField: {\r\n      stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n        const stoneRadius = board.config.theme.stoneSize;\r\n        const count = graphic.length;\r\n        const idx = randSeed % (count + args.field.x * board.config.size + args.field.y) % count;\r\n\r\n        if (typeof graphic[idx] === 'string') {\r\n          // The image has not been loaded yet\r\n          const stoneGraphic = new Image();\r\n          // Redraw the whole board after the image has been loaded.\r\n          // This prevents 'missing stones' and similar graphical errors\r\n          // especially on slower internet connections.\r\n          stoneGraphic.onload = () => {\r\n            // make sure board will be redraw just once, and after every stone is processed\r\n            if (redrawRequest != null) {\r\n              window.clearTimeout(redrawRequest);\r\n            }\r\n            redrawRequest = window.setTimeout(() => {\r\n              board.redraw();\r\n              redrawRequest = null;\r\n            }, 1);\r\n          };\r\n          stoneGraphic.src = graphic[idx];\r\n          graphic[idx] = stoneGraphic;\r\n        }\r\n\r\n        if (isOkay(graphic[idx])) {\r\n          canvasCtx.drawImage(graphic[idx], -stoneRadius, -stoneRadius, 2 * stoneRadius, 2 * stoneRadius);\r\n        } else {\r\n          // Fall back to SHELL handler if there was a problem loading the image\r\n          fallback.drawField.stone(canvasCtx, args, board);\r\n        }\r\n      },\r\n    },\r\n    shadow,\r\n  };\r\n}\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(0, 0, 0.25, 0, 2 * Math.PI, true);\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.rect(-0.25, -0.25, 0.5, 0.5);\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(0, 0 - 0.25);\r\n      canvasCtx.lineTo(-0.25, 0.166666);\r\n      canvasCtx.lineTo(0.25, 0.166666);\r\n      canvasCtx.closePath();\r\n      canvasCtx.stroke();\r\n\r\n      if (params.fillColor) {\r\n        canvasCtx.fillStyle = params.fillColor;\r\n        canvasCtx.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      const font = params.font || board.config.theme.font || '';\r\n\r\n      canvasCtx.fillStyle = params.color || board.config.theme.markupNoneColor;\r\n\r\n      let fontSize = 0.5;\r\n\r\n      if (params.text.length === 1) {\r\n        fontSize = 0.75;\r\n      } else if (params.text.length === 2) {\r\n        fontSize = 0.6;\r\n      }\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.textBaseline = 'middle';\r\n      canvasCtx.textAlign = 'center';\r\n      canvasCtx.font = `${fontSize}px ${font}`;\r\n      canvasCtx.fillText(params.text, 0, 0.02 + (fontSize - 0.5) * 0.08, 2);\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.fillStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.rect(-0.5, -0.5, 1, 1);\r\n      canvasCtx.fill();\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = params.lineWidth || board.config.theme.markupLinesWidth * 1.5;\r\n      canvasCtx.lineCap = 'round';\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(-0.20, -0.20);\r\n      canvasCtx.lineTo(0.20, 0.20);\r\n      canvasCtx.moveTo(0.20, -0.20);\r\n      canvasCtx.lineTo(-0.20, 0.20);\r\n      canvasCtx.stroke();\r\n      canvasCtx.lineCap = 'butt';\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    stone(canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const params = args.params || {};\r\n\r\n      canvasCtx.strokeStyle = params.color || board.config.theme.markupNoneColor;\r\n      canvasCtx.lineWidth = (params.lineWidth || board.config.theme.markupLinesWidth) * 2;\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(\r\n        -0.5 / 3,\r\n        -0.5 / 3,\r\n        0.5 / 6,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.stroke();\r\n      canvasCtx.beginPath();\r\n      canvasCtx.arc(\r\n        0.5 / 3,\r\n        -0.5 / 3,\r\n        0.5 / 6,\r\n        0,\r\n        2 * Math.PI,\r\n        true,\r\n      );\r\n      canvasCtx.stroke();\r\n      canvasCtx.beginPath();\r\n      canvasCtx.moveTo(-0.5 / 1.5, 0);\r\n      canvasCtx.bezierCurveTo(\r\n        -0.5 / 1.5,\r\n        0.5 / 2,\r\n        0.5 / 1.5,\r\n        0.5 / 2,\r\n        0.5 / 1.5,\r\n        0,\r\n      );\r\n      canvasCtx.stroke();\r\n    },\r\n  },\r\n};\r\n","/**\r\n * Draws coordinates on the board\r\n */\r\n\r\nimport CanvasBoard from '..';\r\nimport { BoardFreeObject } from '../types';\r\n\r\nexport default {\r\n  drawFree: {\r\n    grid (canvasCtx: CanvasRenderingContext2D, args: BoardFreeObject, board: CanvasBoard) {\r\n      let t;\r\n\r\n      canvasCtx.fillStyle = board.config.theme.coordinatesColor;\r\n      canvasCtx.textBaseline = 'middle';\r\n      canvasCtx.textAlign = 'center';\r\n      canvasCtx.font = `${board.fieldSize / 2}px ${board.config.theme.font || ''}`;\r\n\r\n      const xright = board.getX(-0.75);\r\n      const xleft = board.getX(board.config.size - 0.25);\r\n      const ytop = board.getY(-0.75);\r\n      const ybottom = board.getY(board.config.size - 0.25);\r\n\r\n      const coordinatesX = board.config.theme.coordinatesX;\r\n      const coordinatesY = board.config.theme.coordinatesY;\r\n\r\n      for (let i = 0; i < board.config.size; i++) {\r\n        t = board.getY(i);\r\n        canvasCtx.fillText(coordinatesX[i] as string, xright, t);\r\n        canvasCtx.fillText(coordinatesX[i] as string, xleft, t);\r\n\r\n        t = board.getX(i);\r\n        canvasCtx.fillText(coordinatesY[i] as string, t, ytop);\r\n        canvasCtx.fillText(coordinatesY[i] as string, t, ybottom);\r\n      }\r\n\r\n      canvasCtx.fillStyle = 'black';\r\n    },\r\n  },\r\n};\r\n","import CanvasBoard from '..';\r\nimport { BoardFieldObject } from '../types';\r\n\r\nexport default {\r\n  drawField: {\r\n    grid (canvasCtx: CanvasRenderingContext2D, args: BoardFieldObject, board: CanvasBoard) {\r\n      const stoneRadius = board.config.theme.stoneSize;\r\n      canvasCtx.clearRect(-stoneRadius, -stoneRadius, 2 * stoneRadius, 2 * stoneRadius);\r\n    },\r\n  },\r\n};\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport coordinates from '../drawHandlers/coordinates';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport gridFieldClear from '../drawHandlers/gridFieldClear';\r\n\r\nconst baseTheme: CanvasBoardTheme = {\r\n  // grid & star points\r\n  gridLinesWidth: 0.03,\r\n  gridLinesColor: '#654525',\r\n  starColor: '#531',\r\n  starSize: 0.07,\r\n  stoneSize: 0.47,\r\n\r\n  // markup\r\n  markupBlackColor: 'rgba(255,255,255,0.9)',\r\n  markupWhiteColor: 'rgba(0,0,0,0.7)',\r\n  markupNoneColor: 'rgba(0,0,0,0.7)',\r\n  markupLinesWidth: 0.05,\r\n\r\n  shadowColor: 'rgba(62,32,32,0.5)',\r\n  shadowTransparentColor: 'rgba(62,32,32,0)',\r\n  shadowBlur: 0.25,\r\n  shadowOffsetX: 0.08,\r\n  shadowOffsetY: 0.16,\r\n\r\n  // coordinates\r\n  coordinatesHandler: coordinates,\r\n  coordinatesColor: '#531',\r\n  coordinatesX: 'ABCDEFGHJKLMNOPQRSTUVWXYZ',\r\n  coordinatesY: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n\r\n  // other\r\n  font: 'monospace',\r\n  linesShift: -0.5,\r\n  backgroundColor: '#CEB053',\r\n  backgroundImage: '',\r\n\r\n  drawHandlers: {\r\n    B: drawHandlers.simpleStone('#222'),\r\n    W: drawHandlers.simpleStone('#eee'),\r\n    CR: drawHandlers.circle,\r\n    LB: drawHandlers.label,\r\n    SQ: drawHandlers.square,\r\n    TR: drawHandlers.triangle,\r\n    MA: drawHandlers.xMark,\r\n    SL: drawHandlers.dot,\r\n    SM: drawHandlers.smileyFace,\r\n    gridFieldClear,\r\n  },\r\n};\r\n\r\nexport default baseTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst realisticTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: '',\r\n\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: drawHandlers.realisticStone([\r\n      'stones/black00_128.png',\r\n      'stones/black01_128.png',\r\n      'stones/black02_128.png',\r\n      'stones/black03_128.png',\r\n    ], drawHandlers.shellStoneBlack),\r\n    W: drawHandlers.realisticStone([\r\n      'stones/white00_128.png',\r\n      'stones/white01_128.png',\r\n      'stones/white02_128.png',\r\n      'stones/white03_128.png',\r\n      'stones/white04_128.png',\r\n      'stones/white05_128.png',\r\n      'stones/white06_128.png',\r\n      'stones/white07_128.png',\r\n      'stones/white08_128.png',\r\n      'stones/white09_128.png',\r\n      'stones/white10_128.png',\r\n    ], drawHandlers.shellStoneWhite),\r\n  },\r\n};\r\n\r\nexport default realisticTheme;\r\n","import * as drawHandlers from '../drawHandlers';\r\nimport { CanvasBoardTheme } from '../types';\r\nimport baseTheme from './baseTheme';\r\n\r\nconst modernTheme: CanvasBoardTheme = {\r\n  ...baseTheme,\r\n  font: 'calibri',\r\n  backgroundImage: '',\r\n\r\n  drawHandlers: {\r\n    ...baseTheme.drawHandlers,\r\n    B: drawHandlers.shellStoneBlack,\r\n    W: drawHandlers.shellStoneWhite,\r\n  },\r\n};\r\n\r\nexport default modernTheme;\r\n","// add here all themes, which should be publicly exposed\r\nimport realisticTheme from './realisticTheme';\r\nimport modernTheme from './modernTheme';\r\nimport baseTheme from './baseTheme';\r\n\r\nexport { baseTheme, realisticTheme, modernTheme };\r\n","import { baseTheme } from './themes';\r\nimport { CanvasBoardConfig } from './types';\r\n\r\nconst canvasBoardDefaultConfig: CanvasBoardConfig = {\r\n  size: 19,\r\n  width: 0,\r\n  height: 0,\r\n  starPoints: {\r\n    5: [{ x: 2, y: 2 }],\r\n    7: [{ x: 3, y: 3 }],\r\n    8: [{ x: 2, y: 2 }, { x: 5, y: 2 }, { x: 2, y: 5 }, { x: 5, y: 5 }],\r\n    9: [{ x: 2, y: 2 }, { x: 6, y: 2 }, { x: 4, y: 4 }, { x: 2, y: 6 }, { x: 6, y: 6 }],\r\n    10: [{ x: 2, y: 2 }, { x: 7, y: 2 }, { x: 2, y: 7 }, { x: 7, y: 7 }],\r\n    11: [{ x: 2, y: 2 }, { x: 8, y: 2 }, { x: 5, y: 5 }, { x: 2, y: 8 }, { x: 8, y: 8 }],\r\n    12: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 }],\r\n    13: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 6, y: 6 }, { x: 3, y: 9 }, { x: 9, y: 9 }],\r\n    14: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 }],\r\n    15: [{ x: 3, y: 3 }, { x: 11, y: 3 }, { x: 7, y: 7 }, { x: 3, y: 11 }, { x: 11, y: 11 }],\r\n    16: [{ x: 3, y: 3 }, { x: 12, y: 3 }, { x: 3, y: 12 }, { x: 12, y: 12 }],\r\n    17: [{ x: 3, y: 3 }, { x: 8, y: 3 }, { x: 13, y: 3 }, { x: 3, y: 8 }, { x: 8, y: 8 },\r\n    { x: 13, y: 8 }, { x: 3, y: 13 }, { x: 8, y: 13 }, { x: 13, y: 13 }],\r\n    18: [{ x: 3, y: 3 }, { x: 14, y: 3 }, { x: 3, y: 14 }, { x: 14, y: 14 }],\r\n    19: [{ x: 3, y: 3 }, { x: 9, y: 3 }, { x: 15, y: 3 }, { x: 3, y: 9 }, { x: 9, y: 9 },\r\n    { x: 15, y: 9 }, { x: 3, y: 15 }, { x: 9, y: 15 }, { x: 15, y: 15 }],\r\n    20: [{ x: 3, y: 3 }, { x: 16, y: 3 }, { x: 3, y: 16 }, { x: 16, y: 16 }],\r\n    21: [{ x: 3, y: 3 }, { x: 10, y: 3 }, { x: 17, y: 3 }, { x: 3, y: 10 }, { x: 10, y: 10 },\r\n    { x: 17, y: 10 }, { x: 3, y: 17 }, { x: 10, y: 17 }, { x: 17, y: 17 }],\r\n  },\r\n  viewport: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  coordinates: false,\r\n  theme: baseTheme,\r\n  marginSize: 0.25,\r\n};\r\n\r\nexport default canvasBoardDefaultConfig;\r\n","export type PartialRecursive<T> = {\r\n  [P in keyof T]?: T[P] | PartialRecursive<T[P]>;\r\n};\r\n\r\n/**\r\n * Helper function for merging default config with provided config.\r\n *\r\n * @param defaults\r\n * @param config\r\n */\r\nexport default function makeConfig<T>(defaults: T, config: PartialRecursive<T>): T {\r\n  const mergedConfig: any = {};\r\n  Object.keys(defaults).forEach((key) => {\r\n    if (typeof (config as any)[key] === 'object' && !Array.isArray((config as any)[key])) {\r\n      mergedConfig[key] = makeConfig((defaults as any)[key], (config as any)[key]);\r\n    } else if ((config as any)[key] !== undefined) {\r\n      mergedConfig[key] = (config as any)[key];\r\n    } else {\r\n      mergedConfig[key] = (defaults as any)[key];\r\n    }\r\n  });\r\n\r\n  return mergedConfig;\r\n}\r\n","/**\r\n * Simple base class for event handling. It tries to follow Node.js EventEmitter class API,\r\n * but contains only basic methods.\r\n */\r\nexport default class EventEmitter {\r\n  // tslint:disable-next-line:variable-name\r\n  private _events: {[eventName: string]: Function[]} = {};\r\n\r\n  on(evName: string, callback: Function) {\r\n    this._events[evName] = this._events[evName] || [];\r\n    this._events[evName].push(callback);\r\n  }\r\n\r\n  off(evName: string, callback: Function) {\r\n    if (this._events[evName]) {\r\n      if (callback == null) {\r\n        this._events[evName] = [];\r\n      }\r\n      this._events[evName] = this._events[evName].filter(fn => fn !== callback);\r\n    }\r\n  }\r\n\r\n  emit(evName: string, ...args: any[]) {\r\n    if (this._events[evName]) {\r\n      this._events[evName].forEach(fn => fn(...args));\r\n    }\r\n  }\r\n}\r\n","import CanvasBoard from '..';\r\nimport { BoardFreeObject } from '../types';\r\n\r\nexport default {\r\n  drawFree: {\r\n    grid(canvasCtx: CanvasRenderingContext2D, args: BoardFreeObject, board: CanvasBoard) {\r\n      // draw grid\r\n      let tmp;\r\n\r\n      canvasCtx.beginPath();\r\n      canvasCtx.lineWidth = board.config.theme.gridLinesWidth * board.fieldSize;\r\n      canvasCtx.strokeStyle = board.config.theme.gridLinesColor;\r\n\r\n      const tx = Math.round(board.margin);\r\n      const ty = Math.round(board.margin);\r\n      const bw = Math.round(board.fieldSize * (board.config.size - 1));\r\n      const bh = Math.round(board.fieldSize * (board.config.size - 1));\r\n\r\n      canvasCtx.strokeRect(tx, ty, bw, bh);\r\n\r\n      for (let i = 1; i < board.config.size - 1; i++) {\r\n        tmp = Math.round(board.getX(i));\r\n        canvasCtx.moveTo(tmp, ty);\r\n        canvasCtx.lineTo(tmp, ty + bh);\r\n\r\n        tmp = Math.round(board.getY(i));\r\n        canvasCtx.moveTo(tx, tmp);\r\n        canvasCtx.lineTo(tx + bw, tmp);\r\n      }\r\n\r\n      canvasCtx.stroke();\r\n\r\n      // draw stars\r\n      canvasCtx.fillStyle = board.config.theme.starColor;\r\n\r\n      if (board.config.starPoints[board.config.size]) {\r\n        for (const key in board.config.starPoints[board.config.size]) {\r\n          canvasCtx.beginPath();\r\n          canvasCtx.arc(\r\n            board.getX(board.config.starPoints[board.config.size][key].x),\r\n            board.getY(board.config.starPoints[board.config.size][key].y),\r\n            board.config.theme.starSize * board.fieldSize, 0, 2 * Math.PI, true,\r\n          );\r\n          canvasCtx.fill();\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n","/* global document, window */\r\n\r\n/**\r\n * Contains implementation of go board.\r\n * @module CanvasBoard\r\n */\r\n\r\nimport ShadowLayer from './ShadowLayer';\r\nimport CanvasLayer from './CanvasLayer';\r\nimport defaultConfig from './defaultConfig';\r\nimport {\r\n  CanvasBoardConfig,\r\n  BoardViewport,\r\n  BoardObject,\r\n  BoardFieldObject,\r\n  BoardFreeObject,\r\n  DrawHandler,\r\n  FreeDrawHandler,\r\n} from './types';\r\nimport makeConfig, { PartialRecursive } from '../utils/makeConfig';\r\nimport EventEmitter from '../utils/EventEmitter';\r\nimport coordinates from './drawHandlers/coordinates';\r\nimport grid from './drawHandlers/grid';\r\nimport { Point } from '../types';\r\n\r\n// Private methods of WGo.CanvasBoard\r\n\r\n/*const calcLeftMargin = (b: CanvasBoard) => (\r\n  //(3 * b.width) / (4 * (b.bottomRightFieldX + 1 - b.topLeftFieldX) + 2) - b.fieldWidth * b.topLeftFieldX\r\n);\r\n\r\nconst calcTopMargin = (b: CanvasBoard) => (\r\n  //(3 * b.height) / (4 * (b.bottomRightFieldY + 1 - b.topLeftFieldY) + 2) - b.fieldHeight * b.topLeftFieldY\r\n);*/\r\n\r\nfunction affectsLayer(layer: string) {\r\n  return (handler: DrawHandler): handler is FreeDrawHandler => !!('drawFree' in handler && handler.drawFree[layer]);\r\n}\r\n\r\nfunction isSameField(field1: Point, field2: Point) {\r\n  return field1.x === field2.x && field1.y === field2.y;\r\n}\r\n\r\n\r\n/*const getMousePos = function (board: CanvasBoard, e: MouseEvent) {\r\n  // new hopefully better translation of coordinates\r\n\r\n  let x: number;\r\n  let y: number;\r\n\r\n  x = e.layerX * board.pixelRatio;\r\n  x -= board.left;\r\n  x /= board.fieldWidth;\r\n  x = Math.round(x);\r\n\r\n  y = e.layerY * board.pixelRatio;\r\n  y -= board.top;\r\n  y /= board.fieldHeight;\r\n  y = Math.round(y);\r\n\r\n  return {\r\n    x: x >= board.size ? -1 : x,\r\n    y: y >= board.size ? -1 : y,\r\n  };\r\n};*/\r\n\r\nconst objectMissing = function (objectsArray: any[]) {\r\n  return function (object: any) {\r\n    return !objectsArray.some((obj: any) => {\r\n      if (object === obj) { return true; }\r\n\r\n      return Object.keys(object).every(key => object[key] === obj[key]);\r\n    });\r\n  };\r\n};\r\n\r\nexport default class CanvasBoard extends EventEmitter {\r\n  config: CanvasBoardConfig;\r\n  element: HTMLElement;\r\n  pixelRatio: number;\r\n  objects: BoardObject[] = [];\r\n  layers: {\r\n    grid: CanvasLayer;\r\n    shadow: CanvasLayer;\r\n    stone: CanvasLayer;\r\n    [key: string]: CanvasLayer;\r\n  };\r\n\r\n  // following props are computed in resize() method for performance\r\n  width: number;\r\n  height: number;\r\n  margin: number;\r\n  fieldSize: number;\r\n  resizeCallback: (this: Window, ev: UIEvent) => any;\r\n\r\n  /**\r\n\t * CanvasBoard class constructor - it creates a canvas board.\r\n\t *\r\n\t * @alias WGo.CanvasBoard\r\n\t * @class\r\n\t * @param {HTMLElement} elem DOM element to put in\r\n\t * @param {Object} config Configuration object. It is object with \"key: value\" structure. Possible configurations are:\r\n\t *\r\n\t * * size: number - size of the board (default: 19)\r\n\t * * width: number - width of the board (default: 0)\r\n\t * * height: number - height of the board (default: 0)\r\n\t * * font: string - font of board writings (!deprecated)\r\n\t * * lineWidth: number - line width of board drawings (!deprecated)\r\n\t * * autoLineWidth: boolean - if set true, line width will be automatically computed accordingly to board size - this\r\n   *   option rewrites 'lineWidth' /and it will keep markups sharp/ (!deprecated)\r\n\t * * starPoints: Object - star points coordinates, defined for various board sizes. Look at CanvasBoard.default for\r\n   *   more info.\r\n\t * * stoneHandler: CanvasBoard.DrawHandler - stone drawing handler (default: CanvasBoard.drawHandlers.SHELL)\r\n\t * * starSize: number - size of star points (default: 1). Radius of stars is dynamic, however you can modify it by\r\n   *   given constant. (!deprecated)\r\n\t * * stoneSize: number - size of stone (default: 1). Radius of stone is dynamic, however you can modify it by given\r\n   *   constant. (!deprecated)\r\n\t * * shadowSize: number - size of stone shadow (default: 1). Radius of shadow is dynamic, however you can modify it by\r\n   *   given constant. (!deprecated)\r\n\t * * background: string - background of the board, it can be either color (#RRGGBB) or url. Empty string means no\r\n   *   background. (default: WGo.DIR+\"wood1.jpg\")\r\n\t * * section: {\r\n\t *     top: number,\r\n\t *     right: number,\r\n\t *     bottom: number,\r\n\t *     left: number\r\n\t *   }\r\n\t *   It defines a section of board to be displayed. You can set a number of rows(or cols) to be skipped on each side.\r\n\t *   Numbers can be negative, in that case there will be more empty space. In default all values are zeros.\r\n\t * * theme: Object - theme object, which defines all graphical attributes of the board. Default theme object\r\n   *   is \"WGo.CanvasBoard.themes.default\". For old look you may use \"WGo.CanvasBoard.themes.old\".\r\n\t *\r\n\t * Note: properties lineWidth, autoLineWidth, starPoints, starSize, stoneSize and shadowSize will be considered only\r\n   * if you set property 'theme' to 'WGo.CanvasBoard.themes.old'.\r\n\t */\r\n\r\n  constructor(elem: HTMLElement, config: PartialRecursive<CanvasBoardConfig> = {}) {\r\n    super();\r\n\r\n    // merge user config with default\r\n    this.config = makeConfig(defaultConfig, config);\r\n\r\n    // init board html\r\n    this.init(elem);\r\n\r\n    // set the pixel ratio for HDPI (e.g. Retina) screens\r\n    this.pixelRatio = window.devicePixelRatio || 1;\r\n\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Initialization method, it is called in constructor. You shouldn't call it, but you can alter it.\r\n   */\r\n\r\n  private init(elem: HTMLElement) {\r\n    this.element = document.createElement('div');\r\n    this.element.className = 'wgo-board';\r\n    this.element.style.position = 'relative';\r\n\r\n    this.element.style.backgroundColor = this.config.theme.backgroundColor;\r\n\r\n    if (this.config.theme.backgroundImage) {\r\n      this.element.style.backgroundImage = `url(\"${this.config.theme.backgroundImage}\")`;\r\n    }\r\n\r\n    this.layers = {\r\n      grid: new CanvasLayer(),\r\n      shadow: new ShadowLayer(),\r\n      stone: new CanvasLayer(),\r\n    };\r\n\r\n    this.addLayer(this.layers.grid, 100);\r\n    this.addLayer(this.layers.shadow, 200);\r\n    this.addLayer(this.layers.stone, 300);\r\n\r\n    // append to element\r\n    elem.appendChild(this.element);\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions and redraws everything\r\n   */\r\n  resize() {\r\n    const countX = this.getCountX();\r\n    const countY = this.getCountY();\r\n    const margins = 2 * this.getMargin();\r\n\r\n    if (this.config.width && this.config.height) {\r\n      // exact dimensions\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = Math.min(\r\n        this.height / (countY + margins),\r\n        this.width / (countX + margins),\r\n      );\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.width) {\r\n      this.width = this.config.width * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + margins);\r\n      this.height = this.fieldSize * (countY + margins);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else if (this.config.height) {\r\n      this.height = this.config.height * this.pixelRatio;\r\n      this.fieldSize = this.height / (countY + margins);\r\n      this.width = this.fieldSize * (countX + margins);\r\n\r\n      if (this.resizeCallback) {\r\n        window.removeEventListener('resize', this.resizeCallback);\r\n      }\r\n    } else {\r\n      this.element.style.width = 'auto';\r\n      this.width = this.element.offsetWidth * this.pixelRatio;\r\n      this.fieldSize = this.width / (countX + margins);\r\n      this.height = this.fieldSize * (countY + margins);\r\n\r\n      if (!this.resizeCallback) {\r\n        this.resizeCallback = () => {\r\n          this.resize();\r\n        };\r\n        window.addEventListener('resize', this.resizeCallback);\r\n      }\r\n    }\r\n\r\n    this.margin = this.fieldSize * (this.getMargin() + 0.5);\r\n\r\n    this.element.style.width = `${(this.width / this.pixelRatio)}px`;\r\n    this.element.style.height = `${(this.height / this.pixelRatio)}px`;\r\n\r\n    Object.keys(this.layers).forEach((layer) => {\r\n      this.layers[layer].setDimensions(\r\n        (countX + margins) * this.fieldSize,\r\n        (countY + margins) * this.fieldSize,\r\n        this,\r\n      );\r\n    });\r\n\r\n    this.redraw();\r\n  }\r\n\r\n  getCountX() {\r\n    return this.config.size - this.config.viewport.left - this.config.viewport.right;\r\n  }\r\n\r\n  getCountY() {\r\n    return this.config.size - this.config.viewport.top - this.config.viewport.bottom;\r\n  }\r\n\r\n  getMargin() {\r\n    return this.config.marginSize + (this.config.coordinates ? 0.5 : 0);\r\n  }\r\n\r\n  /**\r\n\t * Get absolute X coordinate\r\n\t *\r\n\t * @param {number} x relative coordinate\r\n\t */\r\n\r\n  getX(x: number) {\r\n    return this.margin + x * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n\t * Get absolute Y coordinate\r\n\t *\r\n\t * @param {number} y relative coordinate\r\n\t */\r\n\r\n  getY(y: number) {\r\n    return this.margin + y * this.fieldSize;\r\n  }\r\n\r\n  /**\r\n   * Sets width of the board, height will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   */\r\n  setWidth(width: number) {\r\n    this.config.width = width;\r\n    this.config.height = 0;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets height of the board, width will be automatically computed. Then everything will be redrawn.\r\n   *\r\n   * @param height\r\n   */\r\n  setHeight(height: number) {\r\n    this.config.width = 0;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * Sets exact dimensions of the board. Then everything will be redrawn.\r\n   *\r\n   * @param width\r\n   * @param height\r\n   */\r\n  setDimensions(width: number, height: number) {\r\n    this.config.width = width;\r\n    this.config.height = height;\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n\t * Get currently visible section of the board\r\n\t */\r\n\r\n  getViewport() {\r\n    return this.config.viewport;\r\n  }\r\n\r\n  /**\r\n\t * Set section of the board to be displayed\r\n\t */\r\n\r\n  setViewport(viewport: BoardViewport) {\r\n    this.config.viewport = viewport;\r\n    this.resize();\r\n  }\r\n\r\n  getSize() {\r\n    return this.config.size;\r\n  }\r\n\r\n  setSize(size: number = 19) {\r\n    if (size !== this.config.size) {\r\n      this.config.size = size;\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  getCoordinates() {\r\n    return this.config.coordinates;\r\n  }\r\n\r\n  setCoordinates(coordinates: boolean) {\r\n    if (this.config.coordinates !== coordinates) {\r\n      this.config.coordinates = coordinates;\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Add layer to the board. It is meant to be only for canvas layers.\r\n\t *\r\n\t * @param {CanvasBoard.CanvasLayer} layer to add\r\n\t * @param {number} weight layer with biggest weight is on the top\r\n\t */\r\n\r\n  addLayer(layer: CanvasLayer, weight: number) {\r\n    layer.appendTo(this.element, weight);\r\n  }\r\n\r\n  /**\r\n\t * Remove layer from the board.\r\n\t *\r\n\t * @param {CanvasBoard.CanvasLayer} layer to remove\r\n\t */\r\n\r\n  removeLayer(layer: CanvasLayer) {\r\n    layer.removeFrom(this.element);\r\n  }\r\n\r\n  getObjectHandler(boardObject: BoardObject) {\r\n    return boardObject.type ? this.config.theme.drawHandlers[boardObject.type] : boardObject.handler;\r\n  }\r\n\r\n  /**\r\n   * Redraw everything.\r\n   */\r\n  redraw() {\r\n    // redraw all layers\r\n    Object.keys(this.layers).forEach((layer) => {\r\n      this.redrawLayer(layer);\r\n    });\r\n  }\r\n\r\n  /**\r\n\t * Redraw just one layer. Use in special cases, when you know, that only that layer needs to be redrawn.\r\n\t * For complete redrawing use method redraw().\r\n\t */\r\n  redrawLayer(layer: string) {\r\n    this.layers[layer].clear(this);\r\n\r\n    this.getObjectsToDraw().forEach((boardObject) => {\r\n      const handler = this.getObjectHandler(boardObject);\r\n      if ('drawField' in handler && handler.drawField[layer]) {\r\n        this.layers[layer].drawField(handler.drawField[layer], boardObject as BoardFieldObject, this);\r\n      }\r\n      if ('drawFree' in handler && handler.drawFree[layer]) {\r\n        this.layers[layer].draw(handler.drawFree[layer], boardObject as BoardFreeObject, this);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add board object. Main function for adding graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  addObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.addObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const handler = this.getObjectHandler(boardObject);\r\n\r\n    if (!handler) {\r\n      throw new TypeError('Board object has invalid or missing `handler` draw function and cannot be added.');\r\n    }\r\n\r\n    if ('drawField' in handler) {\r\n      if (!('field' in boardObject)) {\r\n        throw new TypeError('Board object has field draw `handler` but `field` property is missing.');\r\n      }\r\n\r\n      this.objects.push(boardObject);\r\n      Object.keys(this.layers).forEach((layer) => {\r\n        if (handler.drawField[layer]) {\r\n          this.layers[layer].drawField(handler.drawField[layer], boardObject, this);\r\n        }\r\n      });\r\n    }\r\n\r\n    if ('drawFree' in handler) {\r\n      this.objects.push(boardObject);\r\n      Object.keys(this.layers).forEach((layer) => {\r\n        if (handler.drawFree[layer]) {\r\n          this.layers[layer].draw(handler.drawFree[layer], boardObject as BoardFreeObject, this);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove board object. Main function for removing graphics on the board.\r\n   *\r\n   * @param boardObject\r\n   */\r\n  removeObject(boardObject: BoardObject | BoardObject[]) {\r\n    // handling multiple objects\r\n    if (Array.isArray(boardObject)) {\r\n      for (let i = 0; i < boardObject.length; i++) {\r\n        this.removeObject(boardObject[i]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const objectPos = this.objects.indexOf(boardObject);\r\n\r\n    if (objectPos === -1) {\r\n      // object isn't on the board, ignore it\r\n      return;\r\n    }\r\n\r\n    this.objects.splice(objectPos, 1);\r\n\r\n    const objects = this.getObjectsToDraw();\r\n    const objectHandler = this.getObjectHandler(boardObject);\r\n    const handlers = objects.map(obj => this.getObjectHandler(obj));\r\n\r\n    Object.keys(this.layers).forEach((layer) => {\r\n      // if there is a free object affecting the layer, we must redraw layer completely\r\n      const affectsCurrentLayer = affectsLayer(layer);\r\n      if (affectsCurrentLayer(objectHandler) || handlers.some(affectsCurrentLayer)) {\r\n        this.redrawLayer(layer);\r\n        return;\r\n      }\r\n\r\n      this.layers[layer].clearField((boardObject as BoardFieldObject).field, this);\r\n\r\n      for (let i = 0; i < objects.length; i++) {\r\n        const obj = objects[i];\r\n        if ('field' in obj && isSameField(obj.field, (boardObject as BoardFieldObject).field)) {\r\n          const handler = handlers[i];\r\n          if ('drawField' in handler && handler.drawField[layer]) {\r\n            this.layers[layer].drawField(handler.drawField[layer], obj, this);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  removeObjectsAt(x: number, y: number) {\r\n    const toRemove: BoardObject[] = [];\r\n    const field = { x, y };\r\n\r\n    this.objects.forEach((obj) => {\r\n      if ('field' in obj && isSameField(obj.field, field)) {\r\n        toRemove.push(obj);\r\n      }\r\n    });\r\n\r\n    this.removeObject(toRemove);\r\n  }\r\n\r\n  removeAllObjects() {\r\n    this.objects = [];\r\n    this.redraw();\r\n  }\r\n\r\n  getObjectsToDraw() {\r\n    // add grid\r\n    const fixedObjects: BoardObject[] = [{ handler: grid }];\r\n\r\n    // add coordinates\r\n    if (this.config.coordinates) {\r\n      fixedObjects.push({ handler: coordinates });\r\n    }\r\n\r\n    return fixedObjects.concat(this.objects);\r\n  }\r\n\r\n  /*on(type, callback) {\r\n    const evListener = {\r\n      type,\r\n      callback,\r\n      handleEvent: event => {\r\n        const coo = getMousePos(this, event);\r\n        callback(coo.x, coo.y, event);\r\n      },\r\n    };\r\n\r\n    this.element.addEventListener(type, evListener, true);\r\n    this.listeners.push(evListener);\r\n  }\r\n\r\n  off(type, callback) {\r\n    for (let i = 0; i < this.listeners.length; i++) {\r\n      const listener = this.listeners[i];\r\n      if (listener.type === type && listener.callback === callback) {\r\n        this.element.removeEventListener(listener.type, listener, true);\r\n        this.listeners.splice(i, 1);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }*/\r\n}\r\n","/**\r\n * WGo's game engine offers to set 3 rules:\r\n *\r\n * - *checkRepeat* - one of `repeat.KO`, `repeat.ALL`, `repeat.NONE` - defines if or when a move can be repeated.\r\n * - *allowRewrite* - if set true a move can rewrite existing move (for uncommon applications)\r\n * - *allowSuicide* - if set true a suicide will be allowed (and stone will be immediately captured)\r\n *\r\n * In this module there are some common preset rule sets (Japanese, Chinese etc...).\r\n * Extend object `gameRules` if you wish to add some rule set. Names of the rules should correspond with\r\n * SGF `RU` property.\r\n */\r\n\r\nexport enum Repeating {\r\n  KO = 'KO',\r\n  ALL = 'ALL',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface GoRules {\r\n  repeating: Repeating;\r\n  allowRewrite: boolean;\r\n  allowSuicide: boolean;\r\n  komi: number;\r\n}\r\n\r\nexport const JAPANESE_RULES: GoRules = {\r\n  repeating: Repeating.KO,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 6.5,\r\n};\r\n\r\nexport const CHINESE_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: false,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const ING_RULES: GoRules = {\r\n  repeating: Repeating.NONE,\r\n  allowRewrite: false,\r\n  allowSuicide: true,\r\n  komi: 7.5,\r\n};\r\n\r\nexport const NO_RULES: GoRules = {\r\n  repeating: Repeating.ALL,\r\n  allowRewrite: true,\r\n  allowSuicide: true,\r\n  komi: 0,\r\n};\r\n\r\nexport default {\r\n  Japanese: JAPANESE_RULES,\r\n  GOE: ING_RULES,\r\n  NZ: ING_RULES,\r\n  AGA: CHINESE_RULES,\r\n  Chinese: CHINESE_RULES,\r\n};\r\n","/**\r\n * Enumeration representing stone color, can be used for representing board position.\r\n */\r\nexport enum Color {\r\n  BLACK = 1,\r\n  B = 1,\r\n  WHITE = -1,\r\n  W = -1,\r\n  EMPTY = 0,\r\n  E = 0,\r\n}\r\n\r\n/**\r\n * Simple 2 dimensional vector for referencing field on the board.\r\n */\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface LineSegment {\r\n  point1: Point;\r\n  point2: Point;\r\n}\r\n\r\nexport interface Label extends Point {\r\n  text: string;\r\n}\r\n\r\nexport interface Field extends Point {\r\n  c: Color;\r\n}\r\n\r\nexport interface Move extends Point {\r\n  c: Color.BLACK | Color.WHITE;\r\n}\r\n","/**\r\n * Contains implementation of go position class.\r\n * @module Position\r\n */\r\n\r\nimport { Color, Field } from '../types';\r\n\r\n// creates 2-dim array\r\nfunction createGrid<T>(size: number) {\r\n  const grid: T[][] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    grid.push([]);\r\n  }\r\n  return grid;\r\n}\r\n\r\n/**\r\n * Position class represents a state of the go game in one moment in time. It is composed from a grid containing black\r\n * and white stones, capture counts, and actual turn. It is designed to be mutable.\r\n */\r\nexport default class Position {\r\n  /**\r\n\t * Size of the board.\r\n\t * @constant\r\n\t */\r\n\r\n  size: number;\r\n\r\n  /**\r\n   * One dimensional array containing stones of the position.\r\n   */\r\n  grid: Color[] = [];\r\n\r\n  /**\r\n   * Contains numbers of stones that both players captured.\r\n   *\r\n   * @property {number} black - Count of white stones captured by **black**.\r\n   * @property {number} white - Count of black stones captured by **white**.\r\n   */\r\n\r\n  capCount = {\r\n    black: 0,\r\n    white: 0,\r\n  };\r\n\r\n  /**\r\n   * Who plays next move.\r\n   */\r\n\r\n  turn: Color.BLACK | Color.WHITE = Color.BLACK;\r\n\r\n  /**\r\n   * Creates instance of position object.\r\n   *\r\n   * @alias WGo.Position\r\n   * @class\r\n   *\r\n   * @param {number} [size = 19] - Size of the board.\r\n   */\r\n  constructor(size: number = 19) {\r\n    this.size = size;\r\n\r\n    // init grid\r\n    this.clear();\r\n  }\r\n\r\n  isOnPosition(x: number, y: number) {\r\n    return x >= 0 && y >= 0 && x < this.size && y < this.size;\r\n  }\r\n\r\n  /**\r\n   * Returns stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @return {Color} Color\r\n   */\r\n  get(x: number, y: number): Color {\r\n    if (!this.isOnPosition(x, y)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.grid[x * this.size + y];\r\n  }\r\n\r\n  /**\r\n   * Sets stone on the given field.\r\n   *\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {Color} c - Color\r\n   */\r\n  set(x: number, y: number, c: Color) {\r\n    if (!this.isOnPosition(x, y)) {\r\n      throw new TypeError('Attempt to set field outside of position.');\r\n    }\r\n\r\n    this.grid[x * this.size + y] = c;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the whole position (every value is set to EMPTY).\r\n   */\r\n  clear() {\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      this.grid[i] = Color.EMPTY;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones the whole position.\r\n   *\r\n   * @return {WGo.Position} Copy of the position.\r\n   * @todo Clone turn as well.\r\n   */\r\n\r\n  clone(): Position {\r\n    const clone = new Position(this.size);\r\n    clone.grid = this.grid.slice(0);\r\n    clone.capCount.black = this.capCount.black;\r\n    clone.capCount.white = this.capCount.white;\r\n    clone.turn = this.turn;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Compares this position with another position and return object with changes\r\n   *\r\n   * @param {WGo.Position} position - Position to compare to.\r\n   * @return {Field[]} Array of different fields\r\n   */\r\n\r\n  compare(position: Position): Field[] {\r\n    if (position.size !== this.size) {\r\n      throw new TypeError('Positions of different sizes cannot be compared.');\r\n    }\r\n\r\n    const diff: Field[] = [];\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      if (this.grid[i] !== position.grid[i]) {\r\n        diff.push({\r\n          x: Math.floor(i / this.size),\r\n          y: i % this.size,\r\n          c: position.grid[i],\r\n        });\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Sets stone on given coordinates and capture adjacent stones without liberties if there are any.\r\n   * If move is invalid, false is returned.\r\n   */\r\n  applyMove(x: number, y: number, c: Color = this.turn, allowSuicide = false, allowRewrite = false) {\r\n    // check if move is on empty field of the board\r\n    if (!(allowRewrite || this.get(x, y) === Color.EMPTY)) {\r\n      return false;\r\n    }\r\n\r\n    // clone position and add a stone\r\n    const prevColor = this.get(x, y);\r\n    this.set(x, y, c);\r\n\r\n    // check capturing of all surrounding stones\r\n    const capturesAbove = this.get(x, y - 1) === -c && this.captureIfNoLiberties(x, y - 1);\r\n    const capturesRight = this.get(x + 1, y) === -c && this.captureIfNoLiberties(x + 1, y);\r\n    const capturesBelow = this.get(x, y + 1) === -c && this.captureIfNoLiberties(x, y + 1);\r\n    const capturesLeft = this.get(x - 1, y) === -c && this.captureIfNoLiberties(x - 1, y);\r\n    const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n    // check suicide\r\n    if (!hasCaptured) {\r\n      if (!this.hasLiberties(x, y)) {\r\n        if (allowSuicide) {\r\n          this.capture(x, y, c);\r\n        } else {\r\n          // revert position\r\n          this.set(x, y, prevColor);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.turn = -c;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n   * that should be captured, they will be removed. Returns a new Position object.\r\n   * This position isn't modified.\r\n   */\r\n\r\n  validatePosition() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        this.captureIfNoLiberties(x - 1, y);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if stone or group on the given coordinates has at least one liberty.\r\n   */\r\n  hasLiberties(x: number, y: number, alreadyTested = createGrid(this.size), c = this.get(x, y)): boolean {\r\n    // out of the board there aren't liberties\r\n    if (!this.isOnPosition(x, y)) {\r\n      return false;\r\n    }\r\n\r\n    // however empty field means liberty\r\n    if (this.get(x, y) === Color.EMPTY) {\r\n      return true;\r\n    }\r\n\r\n    // already tested field or stone of enemy isn't a liberty.\r\n    if (alreadyTested[x][y] || this.get(x, y) === -c) {\r\n      return false;\r\n    }\r\n\r\n    // set this field as tested\r\n    alreadyTested[x][y] = true;\r\n\r\n    // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n    return (\r\n      this.hasLiberties(x, y - 1, alreadyTested, c) ||\r\n      this.hasLiberties(x, y + 1, alreadyTested, c) ||\r\n      this.hasLiberties(x - 1, y, alreadyTested, c) ||\r\n      this.hasLiberties(x + 1, y, alreadyTested, c)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if specified stone/group has zero liberties and if so it captures/removes stones from the position.\r\n   */\r\n  protected captureIfNoLiberties(x: number, y: number) {\r\n    // if it has zero liberties capture it\r\n    if (!this.hasLiberties(x, y)) {\r\n      // capture stones from game\r\n      this.capture(x, y);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n   */\r\n  capture(x: number, y: number, c: Color = this.get(x, y)) {\r\n    if (this.isOnPosition(x, y) && c !== Color.EMPTY && this.get(x, y) === c) {\r\n      this.set(x, y, Color.EMPTY);\r\n\r\n      if (c === Color.BLACK) {\r\n        this.capCount.white = this.capCount.white + 1;\r\n      } else {\r\n        this.capCount.black = this.capCount.black + 1;\r\n      }\r\n\r\n      this.capture(x, y - 1, c);\r\n      this.capture(x, y + 1, c);\r\n      this.capture(x - 1, y, c);\r\n      this.capture(x + 1, y, c);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For debug purposes.\r\n   */\r\n  toString() {\r\n    const TL = '┌';\r\n    const TM = '┬';\r\n    const TR = '┐';\r\n    const ML = '├';\r\n    const MM = '┼';\r\n    const MR = '┤';\r\n    const BL = '└';\r\n    const BM = '┴';\r\n    const BR = '┘';\r\n    const BS = '●';\r\n    const WS = '○';\r\n    const HF = '─'; // horizontal fill\r\n\r\n    let output = '   ';\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      output += i < 9 ? `${i} ` : i;\r\n    }\r\n\r\n    output += '\\n';\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      for (let x = 0; x < this.size; x++) {\r\n        const color = this.grid[x * this.size + y];\r\n\r\n        if (x === 0) {\r\n          output += `${(y < 10 ? ` ${y}` : y)} `;\r\n        }\r\n\r\n        if (color !== Color.EMPTY) {\r\n          output += color === Color.BLACK ? BS : WS;\r\n        } else {\r\n          let char;\r\n\r\n          if (y === 0) {\r\n            // top line\r\n            if (x === 0) {\r\n              char = TL;\r\n            } else if (x < this.size - 1) {\r\n              char = TM;\r\n            } else {\r\n              char = TR;\r\n            }\r\n          } else if (y < this.size - 1) {\r\n            // middle line\r\n            if (x === 0) {\r\n              char = ML;\r\n            } else if (x < this.size - 1) {\r\n              char = MM;\r\n            } else {\r\n              char = MR;\r\n            }\r\n          } else {\r\n            // bottom line\r\n            if (x === 0) {\r\n              char = BL;\r\n            } else if (x < this.size - 1) {\r\n              char = BM;\r\n            } else {\r\n              char = BR;\r\n            }\r\n          }\r\n\r\n          output += char;\r\n        }\r\n\r\n        if (x === this.size - 1) {\r\n          if (y !== this.size - 1) {\r\n            output += '\\n';\r\n          }\r\n        } else {\r\n          output += HF;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns position grid as two dimensional array.\r\n   */\r\n  toTwoDimensionalArray() {\r\n    const arr: Color[][] = [];\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      arr[x] = [];\r\n      for (let y = 0; y < this.size; y++) {\r\n        arr[x][y] = this.grid[x * this.size + y];\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n\r\n// import { Color, Field, Move } from '../types';\r\n\r\n// /**\r\n//  * Position of the board (grid) is represented as 2 dimensional array of colors.\r\n//  */\r\n// export type Position = Color[][];\r\n\r\n// /**\r\n//  * Creates empty position (filled with Color.EMPTY) of specified size.\r\n//  * @param size\r\n//  */\r\n// export function createPosition(size: number) {\r\n//   const position: Color[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     const row: Color[] = [];\r\n//     for (let j = 0; j < size; j++) {\r\n//       row.push(Color.EMPTY);\r\n//     }\r\n//     position.push(row);\r\n//   }\r\n//   return position;\r\n// }\r\n\r\n// /**\r\n//  * Deep clones a position.\r\n//  * @param position\r\n//  */\r\n// export function clonePosition(position: Position) {\r\n//   return position.map(row => row.slice(0));\r\n// }\r\n\r\n// /**\r\n//  * Compares position `pos1` with position `pos2` and returns all differences on `pos2`.\r\n//  * @param pos1\r\n//  * @param pos2\r\n//  */\r\n// export function comparePositions(pos1: Position, pos2: Position): Field[] {\r\n//   if (pos1.length !== pos2.length) {\r\n//     throw new TypeError('Positions of different sizes cannot be compared.');\r\n//   }\r\n\r\n//   const diff: Field[] = [];\r\n\r\n//   for (let x = 0; x < pos1.length; x++) {\r\n//     for (let y = 0; y < pos2.length; y++) {\r\n//       if (pos1[x][y] !== pos2[x][y]) {\r\n//         diff.push({ x, y, c: pos2[x][y] });\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return diff;\r\n// }\r\n\r\n// function isOnBoard(position: Position, x: number, y: number) {\r\n//   return x >= 0 && x < position.length && y >= 0 && y < position.length;\r\n// }\r\n\r\n// /**\r\n//  * Creates new position with specified move (with rules applied - position won't contain captured stones).\r\n//  * If move is invalid, null is returned.\r\n//  */\r\n// export function applyMove(position: Position, x: number, y: number, c: Color.B | Color.W, allowSuicide = false) {\r\n//   // check if move is on empty field of the board\r\n//   if (!isOnBoard(position, x, y) || position[x][y] !== Color.EMPTY) {\r\n//     return null;\r\n//   }\r\n\r\n//   // clone position and add a stone\r\n//   const newPosition = clonePosition(position);\r\n//   newPosition[x][y] = c;\r\n\r\n//   // check capturing of all surrounding stones\r\n//   const capturesAbove = captureIfNoLiberties(newPosition, x, y - 1, -c);\r\n//   const capturesRight = captureIfNoLiberties(newPosition, x + 1, y, -c);\r\n//   const capturesBelow = captureIfNoLiberties(newPosition, x, y + 1, -c);\r\n//   const capturesLeft = captureIfNoLiberties(newPosition, x - 1, y, -c);\r\n//   const hasCaptured = capturesAbove || capturesRight || capturesBelow || capturesLeft;\r\n\r\n//   // check suicide\r\n//   if (!hasCaptured) {\r\n//     if (!hasLiberties(newPosition, x, y)) {\r\n//       if (allowSuicide) {\r\n//         capture(newPosition, x, y, c);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Validate position. Position is tested from 0:0 to size:size, if there are some moves,\r\n//  * that should be captured, they will be removed. Returns a new Position object.\r\n//  */\r\n\r\n// export function getValidatedPosition(position: Position) {\r\n//   const newPosition = clonePosition(position);\r\n\r\n//   for (let x = 0; x < position.length; x++) {\r\n//     for (let y = 0; y < position.length; y++) {\r\n//       captureIfNoLiberties(newPosition, x, y);\r\n//     }\r\n//   }\r\n\r\n//   return newPosition;\r\n// }\r\n\r\n// /**\r\n//  * Capture stone or group of stones if they are zero liberties. Mutates the given position.\r\n//  *\r\n//  * @param position\r\n//  * @param x\r\n//  * @param y\r\n//  * @param c\r\n//  */\r\n// function captureIfNoLiberties(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   let hasCaptured = false;\r\n\r\n//   // is there a stone possible to capture?\r\n//   if (isOnBoard(position, x, y) && c !== Color.EMPTY && position[x][y] === c) {\r\n//     // if it has zero liberties capture it\r\n//     if (!hasLiberties(position, x, y)) {\r\n//       // capture stones from game\r\n//       capture(position, x, y, c);\r\n//       hasCaptured = true;\r\n//     }\r\n//   }\r\n\r\n//   return hasCaptured;\r\n// }\r\n\r\n// function createTestGrid(size: number) {\r\n//   const grid: boolean[][] = [];\r\n//   for (let i = 0; i < size; i++) {\r\n//     grid.push([]);\r\n//   }\r\n//   return grid;\r\n// }\r\n\r\n// /**\r\n//  * Returns true if stone or group on the given position has at least one liberty.\r\n//  */\r\n// function hasLiberties(\r\n//   position: Position,\r\n//   x: number,\r\n//   y: number,\r\n//   alreadyTested = createTestGrid(position.length),\r\n//   c = position[x][y],\r\n// ): boolean {\r\n//   // out of the board there aren't liberties\r\n//   if (!isOnBoard(position, x, y)) {\r\n//     return false;\r\n//   }\r\n\r\n//   // however empty field means liberty\r\n//   if (position[x][y] === Color.EMPTY) {\r\n//     return true;\r\n//   }\r\n\r\n//   // already tested field or stone of enemy isn't a liberty.\r\n//   if (alreadyTested[x][y] || position[x][y] === -c) {\r\n//     return false;\r\n//   }\r\n\r\n//   // set this field as tested\r\n//   alreadyTested[x][y] = true;\r\n\r\n//   // in this case we are checking our stone, if we get 4 false, it has no liberty\r\n//   return (\r\n//     hasLiberties(position, x, y - 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x, y + 1, alreadyTested, c) ||\r\n//     hasLiberties(position, x - 1, y, alreadyTested, c) ||\r\n//     hasLiberties(position, x + 1, y, alreadyTested, c)\r\n//   );\r\n// }\r\n\r\n// /**\r\n//  * Captures/removes stone on specified position and all adjacent and connected stones. This method ignores liberties.\r\n//  * Mutates the given position.\r\n//  */\r\n// function capture(position: Position, x: number, y: number, c: Color = position[x][y]) {\r\n//   if (isOnBoard(position, x, y) && position[x][y] !== Color.EMPTY && position[x][y] === c) {\r\n//     position[x][y] = Color.EMPTY;\r\n\r\n//     capture(position, x, y - 1, c);\r\n//     capture(position, x, y + 1, c);\r\n//     capture(position, x - 1, y, c);\r\n//     capture(position, x + 1, y, c);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * For debug purposes.\r\n//  */\r\n// export function stringifyPosition(position: Position) {\r\n//   const TL = '┌';\r\n//   const TM = '┬';\r\n//   const TR = '┐';\r\n//   const ML = '├';\r\n//   const MM = '┼';\r\n//   const MR = '┤';\r\n//   const BL = '└';\r\n//   const BM = '┴';\r\n//   const BR = '┘';\r\n//   const BS = '●';\r\n//   const WS = '○';\r\n//   const HF = '─'; // horizontal fill\r\n\r\n//   let output = '   ';\r\n\r\n//   for (let i = 0; i < position.length; i++) {\r\n//     output += i < 9 ? `${i} ` : i;\r\n//   }\r\n\r\n//   output += '\\n';\r\n\r\n//   for (let y = 0; y < position.length; y++) {\r\n//     for (let x = 0; x < position.length; x++) {\r\n//       const color = position[x][y];\r\n\r\n//       if (x === 0) {\r\n//         output += `${(y < 10 ? ` ${y}` : y)} `;\r\n//       }\r\n\r\n//       if (color !== Color.EMPTY) {\r\n//         output += color === Color.BLACK ? BS : WS;\r\n//       } else {\r\n//         let char;\r\n\r\n//         if (y === 0) {\r\n//           // top line\r\n//           if (x === 0) {\r\n//             char = TL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = TM;\r\n//           } else {\r\n//             char = TR;\r\n//           }\r\n//         } else if (y < position.length - 1) {\r\n//           // middle line\r\n//           if (x === 0) {\r\n//             char = ML;\r\n//           } else if (x < position.length - 1) {\r\n//             char = MM;\r\n//           } else {\r\n//             char = MR;\r\n//           }\r\n//         } else {\r\n//           // bottom line\r\n//           if (x === 0) {\r\n//             char = BL;\r\n//           } else if (x < position.length - 1) {\r\n//             char = BM;\r\n//           } else {\r\n//             char = BR;\r\n//           }\r\n//         }\r\n\r\n//         output += char;\r\n//       }\r\n\r\n//       if (x === position.length - 1) {\r\n//         if (y !== position.length - 1) {\r\n//           output += '\\n';\r\n//         }\r\n//       } else {\r\n//         output += HF;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return output;\r\n// }\r\n","import { GoRules, JAPANESE_RULES, Repeating } from './rules';\r\nimport Position from './Position';\r\nimport { Color } from '../types';\r\n\r\nexport default class Game {\r\n  size: number;\r\n  rules: GoRules;\r\n  komi: number;\r\n  positionStack: Position[];\r\n\r\n  /**\r\n   * Creates instance of game class.\r\n   *\r\n   * @class\r\n   * This class implements game logic. It basically analyses given moves and returns capture stones.\r\n   * WGo.Game also stores every position from beginning, so it has ability to check repeating positions\r\n   * and it can effectively restore old positions.\r\n   *\r\n   *\r\n   * @param {number} [size = 19] Size of the board\r\n   * @param {string} [checkRepeat = KO] How to handle repeated position:\r\n   *\r\n   * * KO - ko is properly handled - position cannot be same like previous position\r\n   * * ALL - position cannot be same like any previous position - e.g. it forbids triple ko\r\n   * * NONE - position can be repeated\r\n   *\r\n   * @param {boolean} [allowRewrite = false] Allow to play moves, which were already played\r\n   * @param {boolean} [allowSuicide = false] Allow to play suicides, stones are immediately captured\r\n   */\r\n\r\n  constructor(size: number = 19, rules: GoRules = JAPANESE_RULES) {\r\n    this.size = size;\r\n    this.rules = rules;\r\n    this.komi = rules.komi;\r\n    this.positionStack = [new Position(size)];\r\n  }\r\n\r\n  get position() {\r\n    return this.positionStack[this.positionStack.length - 1];\r\n  }\r\n\r\n  set position(pos) {\r\n    this.positionStack[this.positionStack.length - 1] = pos;\r\n  }\r\n\r\n  get turn() {\r\n    return this.position.turn;\r\n  }\r\n\r\n  set turn(color: Color.WHITE | Color.BLACK) {\r\n    this.position.turn = color;\r\n  }\r\n\r\n  get capCount() {\r\n    return this.position.capCount;\r\n  }\r\n\r\n  /**\r\n   * Play move. You can specify color.\r\n   */\r\n  play(x: number, y: number) {\r\n    const nextPosition = this.tryToPlay(x, y);\r\n\r\n    if (nextPosition) {\r\n      this.pushPosition(nextPosition);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Tries to play on given coordinates, returns new position after the play, or error code.\r\n   */\r\n  protected tryToPlay(x: number, y: number) {\r\n    const nextPosition = this.position.clone();\r\n    const success = nextPosition.applyMove(x, y, nextPosition.turn, this.rules.allowSuicide, this.rules.allowRewrite);\r\n\r\n    if (success && !this.hasPositionRepeated(nextPosition)) {\r\n      return nextPosition;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Position} position to check\r\n   * @return {boolean} Returns true if the position didn't occurred in the past (according to the rule set)\r\n   */\r\n  hasPositionRepeated(position: Position): boolean {\r\n    let depth: number;\r\n\r\n    if (this.rules.repeating === Repeating.KO && this.positionStack.length - 2 >= 0) {\r\n      depth = this.positionStack.length - 2;\r\n    } else if (this.rules.repeating === Repeating.NONE) {\r\n      depth = 0;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    for (let i = this.positionStack.length - 1; i >= depth; i--) {\r\n      if (this.positionStack[i].compare(position).length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Play pass.\r\n   *\r\n   * @param {(BLACK|WHITE)} c color\r\n   */\r\n\r\n  pass(c: Color.BLACK | Color.WHITE = this.turn) {\r\n    const nextPosition = this.position.clone();\r\n    nextPosition.turn = -(c || this.turn);\r\n    this.pushPosition(nextPosition);\r\n  }\r\n\r\n  /**\r\n   * Finds out validity of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move can be played.\r\n   */\r\n\r\n  isValid(x: number, y: number): boolean {\r\n    return !!this.tryToPlay(x, y);\r\n  }\r\n\r\n  /**\r\n   * Controls position of the move.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if move is on board.\r\n   */\r\n\r\n  isOnBoard(x: number, y: number): boolean {\r\n    return this.position.isOnPosition(x, y);\r\n  }\r\n\r\n  /**\r\n   * Inserts move into current position. Use for setting position, for example in handicap game. Field must be empty.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {Color} c color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  addStone(x: number, y: number, c: Color.BLACK | Color.WHITE): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) === Color.EMPTY) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes move from current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  removeStone(x: number, y: number): boolean {\r\n    if (this.isOnBoard(x, y) && this.position.get(x, y) !== Color.EMPTY) {\r\n      this.position.set(x, y, Color.EMPTY);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set or insert move of current position.\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @param {(BLACK|WHITE)} [c] color\r\n   * @return {boolean} true if operation is successful.\r\n   */\r\n\r\n  setStone(x: number, y: number, c: Color): boolean {\r\n    if (this.isOnBoard(x, y)) {\r\n      this.position.set(x, y, c);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get stone on given position.s\r\n   *\r\n   * @param {number} x coordinate\r\n   * @param {number} y coordinate\r\n   * @return {(Color|null)} color\r\n   */\r\n\r\n  getStone(x: any, y: any): (Color | null) {\r\n    return this.position.get(x, y);\r\n  }\r\n\r\n  /**\r\n   * Add position to stack. If position isn't specified current position is cloned and stacked.\r\n   * Pointer of actual position is moved to the new position.\r\n   *\r\n   * @param {WGo.Position} tmp position (optional)\r\n   */\r\n\r\n  pushPosition(pos: Position) {\r\n    return this.positionStack.push(pos);\r\n  }\r\n\r\n  /**\r\n   * Remove current position from stack. Pointer of actual position is moved to the previous position.\r\n   */\r\n\r\n  popPosition() {\r\n    if (this.positionStack.length > 1) {\r\n      return this.positionStack.pop();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes all positions except the initial.\r\n   */\r\n\r\n  clear() {\r\n    this.positionStack = [this.positionStack[0]];\r\n  }\r\n}\r\n","// All public API is exported here\r\n\r\nexport { default as SGFParser, SGFSyntaxError } from './SGFParser';\r\nexport { default as CanvasBoard } from './CanvasBoard';\r\nexport * from './CanvasBoard';\r\nexport * from './Game';\r\n"],"names":["tslib_1.__extends","drawHandlers.simpleStone","drawHandlers.circle","drawHandlers.label","drawHandlers.square","drawHandlers.triangle","drawHandlers.xMark","drawHandlers.dot","drawHandlers.smileyFace","drawHandlers.realisticStone","drawHandlers.shellStoneBlack","drawHandlers.shellStoneWhite","defaultConfig","Repeating"],"mappings":"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EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACnE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACnF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxF,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBACpF,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBACpF,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACpE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAA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4BACvB,MAAM,IAAI,IAAI,CAAC;yBAChB;qBACF;yBAAM;wBACL,MAAM,IAAI,EAAE,CAAC;qBACd;iBACF;aACF;YAED,OAAO,MAAM,CAAC;SACf;;;;QAKD,wCAAqB,GAArB;YACE,IAAM,GAAG,GAAc,EAAE,CAAC;YAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;gBAClC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBAClC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;iBAC1C;aACF;YAED,OAAO,GAAG,CAAC;SACZ;QACH,eAAC;IAAD,CAAC,IAAA;IAED;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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"}